### YamlMime:ManagedReference
items:
- uid: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
  commentId: T:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
  id: TensorTypeInfo
  parent: Microsoft.ML.OnnxRuntime.Tensors
  children:
  - Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int32)
  - Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
  - Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
  - Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
  langs:
  - csharp
  - vb
  name: TensorTypeInfo
  nameWithType: TensorTypeInfo
  fullName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
  type: Class
  source:
    remote:
      path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      branch: csharp-docs
      repo: https://github.com/cassiebreviu/onnxruntime.git
    id: TensorTypeInfo
    path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
    startLine: 217
  assemblies:
  - Microsoft.ML.OnnxRuntime
  namespace: Microsoft.ML.OnnxRuntime.Tensors
  summary: "\nHelps typecasting. Holds Tensor element type traits.\n"
  example: []
  syntax:
    content: public class TensorTypeInfo
    content.vb: Public Class TensorTypeInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
  commentId: P:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
  id: ElementType
  parent: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
  langs:
  - csharp
  - vb
  name: ElementType
  nameWithType: TensorTypeInfo.ElementType
  fullName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
  type: Property
  source:
    remote:
      path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      branch: csharp-docs
      repo: https://github.com/cassiebreviu/onnxruntime.git
    id: ElementType
    path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
    startLine: 223
  assemblies:
  - Microsoft.ML.OnnxRuntime
  namespace: Microsoft.ML.OnnxRuntime.Tensors
  summary: "\nTensorElementType enum\n"
  example: []
  syntax:
    content: public TensorElementType ElementType { get; }
    parameters: []
    return:
      type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      description: type enum value
    content.vb: Public ReadOnly Property ElementType As TensorElementType
  overload: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
  commentId: P:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
  id: TypeSize
  parent: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
  langs:
  - csharp
  - vb
  name: TypeSize
  nameWithType: TensorTypeInfo.TypeSize
  fullName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
  type: Property
  source:
    remote:
      path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      branch: csharp-docs
      repo: https://github.com/cassiebreviu/onnxruntime.git
    id: TypeSize
    path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
    startLine: 228
  assemblies:
  - Microsoft.ML.OnnxRuntime
  namespace: Microsoft.ML.OnnxRuntime.Tensors
  summary: "\nSize of the stored primitive type in bytes\n"
  example: []
  syntax:
    content: public int TypeSize { get; }
    parameters: []
    return:
      type: System.Int32
      description: size in bytes
    content.vb: Public ReadOnly Property TypeSize As Integer
  overload: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
  commentId: P:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
  id: IsString
  parent: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
  langs:
  - csharp
  - vb
  name: IsString
  nameWithType: TensorTypeInfo.IsString
  fullName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
  type: Property
  source:
    remote:
      path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      branch: csharp-docs
      repo: https://github.com/cassiebreviu/onnxruntime.git
    id: IsString
    path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
    startLine: 233
  assemblies:
  - Microsoft.ML.OnnxRuntime
  namespace: Microsoft.ML.OnnxRuntime.Tensors
  summary: "\nIs the type is a string\n"
  example: []
  syntax:
    content: public bool IsString { get; }
    parameters: []
    return:
      type: System.Boolean
      description: true if Tensor element type is a string
    content.vb: Public ReadOnly Property IsString As Boolean
  overload: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int32)
  commentId: M:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int32)
  id: '#ctor(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType,System.Int32)'
  parent: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo
  langs:
  - csharp
  - vb
  name: TensorTypeInfo(TensorElementType, Int32)
  nameWithType: TensorTypeInfo.TensorTypeInfo(TensorElementType, Int32)
  fullName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TensorTypeInfo(Microsoft.ML.OnnxRuntime.Tensors.TensorElementType, System.Int32)
  type: Constructor
  source:
    remote:
      path: csharp/src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
      branch: csharp-docs
      repo: https://github.com/cassiebreviu/onnxruntime.git
    id: .ctor
    path: ../src/Microsoft.ML.OnnxRuntime/Tensors/Tensor.shared.cs
    startLine: 239
  assemblies:
  - Microsoft.ML.OnnxRuntime
  namespace: Microsoft.ML.OnnxRuntime.Tensors
  summary: "\nCtor\n"
  example: []
  syntax:
    content: public TensorTypeInfo(TensorElementType elementType, int typeSize)
    parameters:
    - id: elementType
      type: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
      description: TensorElementType value
    - id: typeSize
      type: System.Int32
      description: size fo the type in bytes
    content.vb: Public Sub New(elementType As TensorElementType, typeSize As Integer)
  overload: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ML.OnnxRuntime.Tensors
  commentId: N:Microsoft.ML.OnnxRuntime.Tensors
  name: Microsoft.ML.OnnxRuntime.Tensors
  nameWithType: Microsoft.ML.OnnxRuntime.Tensors
  fullName: Microsoft.ML.OnnxRuntime.Tensors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType*
  commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
  name: ElementType
  nameWithType: TensorTypeInfo.ElementType
  fullName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.ElementType
- uid: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
  commentId: T:Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
  parent: Microsoft.ML.OnnxRuntime.Tensors
  name: TensorElementType
  nameWithType: TensorElementType
  fullName: Microsoft.ML.OnnxRuntime.Tensors.TensorElementType
- uid: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize*
  commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
  name: TypeSize
  nameWithType: TensorTypeInfo.TypeSize
  fullName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TypeSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString*
  commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
  name: IsString
  nameWithType: TensorTypeInfo.IsString
  fullName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.IsString
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor*
  commentId: Overload:Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.#ctor
  name: TensorTypeInfo
  nameWithType: TensorTypeInfo.TensorTypeInfo
  fullName: Microsoft.ML.OnnxRuntime.Tensors.TensorTypeInfo.TensorTypeInfo
