<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OnnxRuntimeRoot>$(ProjectDir)..\..\..</OnnxRuntimeRoot>
  </PropertyGroup>

  <Import Project="../Microsoft.ML.OnnxRuntime.Tests.Common/NativeLibraryInclude.props" />

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <IsPackable>false</IsPackable>
    <OnnxRuntimeCsharpRoot>$(ProjectDir)..\..</OnnxRuntimeCsharpRoot>
    <Platforms>AnyCPU;x86</Platforms>
    <OutputPath>bin\$(Configuration)\</OutputPath>

    <ProtoSrc>$(OnnxSourceDirectory)\onnx</ProtoSrc>
    <!-- following attributes were necessary for the migrated Tensor tests -->
    <LangVersion>default</LangVersion>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <SignAssembly>true</SignAssembly> <!-- need signing for friend access to the internals of the Tensors assembly -->
    <AssemblyOriginatorKeyFile>..\..\OnnxRuntime.snk</AssemblyOriginatorKeyFile>
    <Configurations>Debug;Release;RelWithDebInfo</Configurations>
    <!-- end -->

    <!-- Training build property.
    Should be set to true when training is enabled in onnxruntime native binary
    Note: This property should be set when building the csharp solution independently.
    When building using the build.py script, setting the necessary properties is handled by the script. -->
    <TrainingEnabledNativeBuild Condition="'$(TrainingEnabledNativeBuild)' == ''">false</TrainingEnabledNativeBuild>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TrainingEnabledNativeBuild)'=='true'">
    <ExtraDefineConstants>$(ExtraDefineConstants);__TRAINING_ENABLED_NATIVE_BUILD__</ExtraDefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants>__NET_CORE_APP__;$(DefineConstants);$(ExtraDefineConstants)</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsLinuxBuild)'=='true'">
    <!--internal build related properties for Linux -->
    <OnnxRuntimeBuildDirectory Condition="'$(OnnxRuntimeBuildDirectory)'==''">$(OnnxRuntimeRoot)\build\Linux</OnnxRuntimeBuildDirectory>
    <NativeBuildOutputDir>$(OnnxRuntimeBuildDirectory)\$(Configuration)</NativeBuildOutputDir>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsWindowsBuild)'=='true'">
    <!--internal build related properties for Windows -->
    <OnnxRuntimeBuildDirectory Condition="'$(OnnxRuntimeBuildDirectory)'==''">$(OnnxRuntimeRoot)\build\Windows</OnnxRuntimeBuildDirectory>
    <NativeBuildOutputDir>$(OnnxRuntimeBuildDirectory)\$(Configuration)\$(Configuration)</NativeBuildOutputDir>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsMacOSBuild)'=='true'">
    <!--internal build related properties for OSX -->
    <OnnxRuntimeBuildDirectory Condition="'$(OnnxRuntimeBuildDirectory)'==''">$(OnnxRuntimeRoot)\build\MacOS</OnnxRuntimeBuildDirectory>
    <NativeBuildOutputDir>$(OnnxRuntimeBuildDirectory)\$(Configuration)</NativeBuildOutputDir>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.11.0" />
    <PackageReference Include="xunit" Version="2.9.0" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.8.2" />
  </ItemGroup>

  <!--
    Additional libraries that aren't copied by Microsoft.ML.OnnxRuntime.Tests.Common.csproj

    NOTE: We use a wildcard for custom_op_library even though that isn't necessary, so it doesn't fail
          if the custom op library isn't present, which it may not be depending on the ORT build settings.
  -->
  <ItemGroup>
    <None Condition="'$(IsWindowsBuild)'=='true'"
          Include="$(NativeBuildOutputDir)\onnxruntime_providers_*.dll;
                   $(NativeBuildOutputDir)\onnxruntime_providers_*.pdb;
                   $(NativeBuildOutputDir)\custom_op_library*.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>

    <None Condition="'$(IsLinuxBuild)'=='true'"
          Include="$(NativeBuildOutputDir)\libonnxruntime_providers_*.so;
                   $(NativeBuildOutputDir)\libcustom_op_library*.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>

    <None Condition="'$(IsMacOSBuild)'=='true'"
          Include="$(NativeBuildOutputDir)\libonnxruntime_providers_*.dylib;
                   $(NativeBuildOutputDir)\libcustom_op_library*.dylib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>

    <None Include="$(OnnxRuntimeRoot)\csharp\testdata\*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>

    <None Include="$(OnnxRuntimeRoot)\onnxruntime\test\testdata\custom_op_library\custom_op_test.onnx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>

    <None Include="$(OnnxRuntimeRoot)\onnxruntime\test\testdata\lora\two_params_lora_model.onnx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>

    <None Include="$(OnnxRuntimeRoot)\onnxruntime\test\testdata\lora\two_params_lora_model.onnx_adapter">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>

    <BuildEnvVars Include="OnnxRuntimeBuildDirectory=$(OnnxRuntimeBuildDirectory)" />
  </ItemGroup>

  <Target Name="DefineBuildEnvironmentVariables" BeforeTargets="Build">
    <WriteLinesToFile File="$(OutputPath)\Properties.txt" Lines="@(BuildEnvVars)" Overwrite="true" />
  </Target>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

  <!-- NOTE: The xUnit framework doesn't pickup the tests defined within the referenced Microsoft.ML.OnnxRuntime.Tests.Common project -->
  <ItemGroup>
    <Compile Include="..\Microsoft.ML.OnnxRuntime.Tests.Common\**\*Test.cs" />
    <Compile Include="..\Microsoft.ML.OnnxRuntime.Tests.Common\**\*Tests.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Include="$(OnnxRuntimeRoot)\onnxruntime\test\testdata\training_api\**\*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.ML.OnnxRuntime.Tests.Common\Microsoft.ML.OnnxRuntime.Tests.Common.csproj" />
  </ItemGroup>
</Project>
