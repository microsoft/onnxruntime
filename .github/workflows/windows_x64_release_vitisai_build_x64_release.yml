name: windows_x64_release_vitisai

on:
  push:
    branches: [ main, 'rel-*']
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_x64_release_vitisai:
    runs-on: ["self-hosted", "1ES.Pool=onnxruntime-github-vs2022-mms"]
    timeout-minutes: 300

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: false

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        architecture: x64

    - name: Locate vcvarsall and Setup Env
      uses: ./.github/actions/locate-vcvarsall-and-setup-env
      with:
        architecture: x64

    - name: Install python modules
      shell: cmd
      run: python -m pip install -r "${{ github.workspace }}\tools\ci_build\github\windows\python\requirements.txt"

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        architecture: x64

    - name: API Documentation Check and generate
      shell: cmd
      run: |
        set ORT_DOXY_SRC=${{ github.workspace }}
        set ORT_DOXY_OUT=${{ github.workspace }}\build\RelWithDebInfo\RelWithDebInfo
        mkdir %ORT_DOXY_SRC%
        mkdir %ORT_DOXY_OUT%
        "C:\Program Files\doxygen\bin\doxygen.exe" ${{ github.workspace }}\tools\ci_build\github\Doxyfile_csharp.cfg
      working-directory: ${{ github.workspace }}

    - name: Use .NET 8.x
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
      env:
        PROCESSOR_ARCHITECTURE: x64

    - name: Use Nuget 6.x
      uses: nuget/setup-nuget@v2
      with:
        nuget-version: '6.x'

    - name: NuGet restore
      shell: cmd
      run: |
        nuget restore ${{ github.workspace }}\packages.config -PackagesDirectory ${{ github.workspace }}\build\RelWithDebInfo -ConfigFile ${{ github.workspace }}\NuGet.config

    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Build
      shell: pwsh
      run: |
        python.exe "${{ github.workspace }}\tools\ci_build\build.py" --config RelWithDebInfo --build_dir "${{ github.workspace }}\build" --skip_submodule_sync --build_csharp --parallel --use_binskim_compliant_compile_flags --cmake_generator "Visual Studio 17 2022" --build_shared_lib --update --build --build_wheel --use_vitisai --use_vcpkg --use_vcpkg_ms_internal_asset_cache
        if ($LASTEXITCODE -ne 0) {
          exit $LASTEXITCODE
        }
        Remove-Item "${{ github.workspace }}\build\RelWithDebInfo" -Include "*.obj" -Recurse
      env:
        ALLOW_RELEASED_ONNX_OPSET_ONLY: '0'

    - name: Validate C# native delegates
      shell: cmd
      run: python tools\ValidateNativeDelegateAttributes.py
      working-directory: ${{ github.workspace }}\\csharp

    - name: Install onnxruntime wheel
      shell: pwsh
      run: |
        python -m pip uninstall -y onnxruntime onnxruntime-gpu onnxruntime-training onnxruntime-directml -qq
        if ($LASTEXITCODE -ne 0) {
          exit $LASTEXITCODE
        }
        Get-ChildItem -Path dist/*.whl | foreach {pip --disable-pip-version-check install --upgrade $_.fullname}
      working-directory:  "${{ github.workspace }}\\build\\RelWithDebInfo\\RelWithDebInfo"   
    env:
      OrtPackageId: Microsoft.ML.OnnxRuntime
      OnnxRuntimeBuildDirectory: ${{ github.workspace }}\build
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'
