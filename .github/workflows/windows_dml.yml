name: ONNX Runtime DirectML Builds

on:
  push:
    branches:
      - main
      - rel-*
  pull_request:
    branches:
      - main
      - rel-*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_x64_RelWithDebInfo:
    name: Windows GPU DML CI Pipeline
    env:
      OrtPackageId: Microsoft.ML.OnnxRuntime.DirectML
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      setVcvars: true
      ALLOW_RELEASED_ONNX_OPSET_ONLY: '0'
      DocUpdateNeeded: false
      ONNXRUNTIME_TEST_GPU_DEVICE_ID: '0'
    runs-on: ["self-hosted", "1ES.Pool=onnxruntime-github-Win2022-GPU-A10"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
          submodules: 'none'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: x64

      - name: Locate vcvarsall and Setup Env
        uses: ./.github/actions/locate-vcvarsall-and-setup-env
        with:
          architecture: x64

      - name: Install python modules
        run: python -m pip install -r .\tools\ci_build\github\windows\python\requirements.txt
        working-directory: ${{ github.workspace }}
        shell: cmd

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          architecture: x64

      - name: API Documentation Check and generate
        run: |
          set ORT_DOXY_SRC=${{ github.workspace }}
          set ORT_DOXY_OUT=${{ github.workspace }}\RelWithDebInfo\RelWithDebInfo
          mkdir %ORT_DOXY_SRC%
          mkdir %ORT_DOXY_OUT%
          "C:\Program Files\doxygen\bin\doxygen.exe" ${{ github.workspace }}\tools\ci_build\github\Doxyfile_csharp.cfg
        working-directory: ${{ github.workspace }}
        shell: cmd

      - uses: actions/setup-dotnet@v4
        env:
          PROCESSOR_ARCHITECTURE: x64
        with:
          dotnet-version: '8.x'

      - name: Use Nuget 6.x
        uses: nuget/setup-nuget@v2
        with:
            nuget-version: '6.x'

      - name: NuGet restore
        run: nuget restore ${{ github.workspace }}\packages.config -ConfigFile ${{ github.workspace }}\NuGet.config -PackagesDirectory ${{ github.workspace }}\RelWithDebInfo
        shell: cmd

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Set OnnxRuntimeBuildDirectory
        shell: pwsh
        run: |
          $buildDir = Join-Path ${{ runner.temp }} "build"
          echo "OnnxRuntimeBuildDirectory=$buildDir" >> $env:GITHUB_ENV

      - name: Build and Test
        working-directory: ${{ runner.temp }}
        run: |
          python.exe ${{ github.workspace }}\tools\ci_build\build.py --config RelWithDebInfo --build_dir build --skip_submodule_sync --build_csharp --parallel  --use_binskim_compliant_compile_flags --cmake_generator "Visual Studio 17 2022" --build_shared_lib --enable_onnx_tests --build_wheel --use_dml --enable_wcos --use_vcpkg --use_vcpkg_ms_internal_asset_cache
          if ($lastExitCode -ne 0) {
            exit $lastExitCode
          }
          Remove-Item "${{ github.workspace }}\RelWithDebInfo" -Include "*.obj" -Recurse
        shell: pwsh

      - name: Validate C# native delegates
        run: python tools\ValidateNativeDelegateAttributes.py
        working-directory: ${{ github.workspace }}\csharp
        shell: cmd

      - name: Install ONNX Runtime Wheel
        uses: ./.github/actions/install-onnxruntime-wheel
        with:
          whl-directory: ${{ runner.temp }}\build\RelWithDebInfo\RelWithDebInfo\dist

      