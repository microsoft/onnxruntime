# This workflow builds and tests the ONNX Runtime for Linux for DNNL EP
# It leverages a reusable workflow (`reusable_linux_build.yml`) to handle the core build and test logic
# within Docker containers, ensuring a consistent environment.
# This file is very similar to linux_ci.yml, but much simpler


name: Linux DNNL CI

on:
  push:
    branches: [ main, 'rel-*']
  pull_request:
    branches: [ main, 'rel-*']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  build-linux-x64-release-dnnl:
    name: Build Linux x64 Release (DNNL EP)
    uses: ./.github/workflows/reusable_linux_build.yml
    with:
      pool_name: "onnxruntime-github-Ubuntu2204-AMD-CPU"
      build_config: Release
      architecture: x64
      dockerfile_path: tools/ci_build/github/linux/docker/Dockerfile.manylinux2_28_cpu
      docker_image_repo: onnxruntimecpubuildpythonx64
      extra_build_flags: '--use_binskim_compliant_compile_flags --build_wheel --build_nuget --use_dnnl'
      python_path_prefix: 'PATH=/opt/python/cp310-cp310/bin:$PATH'
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
