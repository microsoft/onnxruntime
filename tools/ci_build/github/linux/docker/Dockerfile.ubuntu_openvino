ARG UBUNTU_VERSION=20.04
FROM ubuntu:${UBUNTU_VERSION}

ARG OPENVINO_VERSION=2022.1.0
ARG PYTHON_VERSION=3.8

ADD scripts /tmp/scripts
RUN /tmp/scripts/install_ubuntu.sh -p ${PYTHON_VERSION} -d EdgeDevice && \
    /tmp/scripts/install_os_deps.sh -d EdgeDevice && \
    /tmp/scripts/install_python_deps.sh -p ${PYTHON_VERSION} -d EdgeDevice

RUN apt update && apt install -y libnuma1 ocl-icd-libopencl1 && \
    rm -rf /var/lib/apt/lists/* /tmp/scripts

WORKDIR /root

ENV INTEL_OPENVINO_DIR /opt/intel/openvino_${OPENVINO_VERSION}.643
ENV LD_LIBRARY_PATH $INTEL_OPENVINO_DIR/runtime/lib/intel64:$INTEL_OPENVINO_DIR/runtime/3rdparty/tbb/lib:/usr/local/openblas/lib:$LD_LIBRARY_PATH
ENV InferenceEngine_DIR $INTEL_OPENVINO_DIR/runtime/cmake
ENV ngraph_DIR $INTEL_OPENVINO_DIR/runtime/cmake
ENV IE_PLUGINS_PATH $INTEL_OPENVINO_DIR/runtime/lib/intel64
ENV DEBIAN_FRONTEND=noninteractive
ENV PATH /usr/local/gradle/bin:$PATH

RUN wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && \
    apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && \
    echo "deb https://apt.repos.intel.com/openvino/2022 bionic main" | tee /etc/apt/sources.list.d/intel-openvino-2022.list && \
    apt update && \ 
    apt -y install openvino-2022.1.0 && \
    cd $INTEL_OPENVINO_DIR/install_dependencies && ./install_openvino_dependencies.sh -y

RUN wget "https://github.com/intel/compute-runtime/releases/download/21.48.21782/intel-gmmlib_21.3.3_amd64.deb" && \
    wget "https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.9441/intel-igc-core_1.0.9441_amd64.deb" && \
    wget "https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.9441/intel-igc-opencl_1.0.9441_amd64.deb" && \
    wget "https://github.com/intel/compute-runtime/releases/download/21.48.21782/intel-opencl-icd_21.48.21782_amd64.deb" && \
    wget "https://github.com/intel/compute-runtime/releases/download/21.48.21782/intel-level-zero-gpu_1.2.21782_amd64.deb" && \
    sudo dpkg -i *.deb && rm -rf *.deb

RUN mkdir -p /opt/cmake/bin && \
    wget https://github.com/Kitware/CMake/releases/download/v3.21.0/cmake-3.21.0-linux-x86_64.tar.gz && \
    tar -xf cmake-3.21.0-linux-x86_64.tar.gz --strip 1 -C /opt/cmake && rm -rf /cmake-3.21.0-linux-x86_64.tar.gz && \
    ln -sf /opt/cmake/bin/* /usr/bin

ARG BUILD_UID=1000
ARG BUILD_USER=onnxruntimedev
WORKDIR /home/$BUILD_USER
RUN adduser --gecos 'onnxruntime Build User' --disabled-password $BUILD_USER --uid $BUILD_UID
RUN adduser $BUILD_USER video
USER $BUILD_USER
