jobs:
- job: 'build'
  pool: 'Win-GPU-2019'
  strategy:
    maxParallel: 2
    matrix:
      relwithdebinfo:
        BuildConfig: 'RelWithDebInfo'
      minsizerel:
        BuildConfig: 'MinSizeRel'
  variables:
    OrtPackageId: 'Microsoft.ML.OnnxRuntime'
    MsbuildArguments: '-detailedsummary -maxcpucount -consoleloggerparameters:PerformanceSummary'
    OnnxRuntimeBuildDirectory: '$(Build.BinariesDirectory)'
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    EnvSetupScript: setup_env_cuda.bat
    buildArch: x64
    setVcvars: true
  timeoutInMinutes: 120
  workspace:
    clean: all
  steps:
  - task: UsePythonVersion@0
    inputs: 
      versionSpec: '3.7'
      addToPath: true
      architecture: $(buildArch)

  - task: BatchScript@1
    displayName: 'setup env'
    inputs:
      filename: '$(Build.SourcesDirectory)\tools\ci_build\github\windows\$(EnvSetupScript)'
      modifyEnvironment: true
      workingFolder: '$(Build.BinariesDirectory)'

  - script: |
     python -m pip install -q pyopenssl setuptools wheel numpy
    workingDirectory: '$(Build.BinariesDirectory)'
    displayName: 'Install python modules'

  - powershell: |
     $Env:USE_MSVC_STATIC_RUNTIME=1
     $Env:ONNX_ML=1
     $Env:CMAKE_ARGS="-DONNX_USE_PROTOBUF_SHARED_LIBS=OFF -DProtobuf_USE_STATIC_LIBS=ON -DONNX_USE_LITE_PROTO=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=$(buildArch)-windows-static"
     python setup.py bdist_wheel
     Get-ChildItem -Path dist/*.whl | foreach {pip --disable-pip-version-check install --upgrade $_.fullname}
    workingDirectory: '$(Build.SourcesDirectory)\cmake\external\onnx'
    displayName: 'Install ONNX'

  - task: PythonScript@0
    displayName: 'Build and test'
    inputs:
      scriptPath: '$(Build.SourcesDirectory)\tools\ci_build\build.py'
      arguments: '--config $(BuildConfig) --build_dir $(Build.BinariesDirectory) --skip_submodule_sync --cmake_generator "Visual Studio 16 2019" --build_wheel --use_cuda --cuda_version=10.1 --cuda_home="C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1" --cudnn_home="C:\local\cudnn-10.1-windows10-x64-v7.6.5.32\cuda" --cmake_extra_defines CMAKE_SYSTEM_VERSION=10.0.18362.0 --include_ops_by_model="$(Build.SourcesDirectory)\onnxruntime\test\testdata" --include_ops_by_config="$(Build.SourcesDirectory)\onnxruntime\test\testdata\reduced_ops_via_config.config"'
      workingDirectory: '$(Build.BinariesDirectory)'

  - template: templates/component-governance-component-detection-steps.yml
    parameters :
      condition : 'succeeded'

