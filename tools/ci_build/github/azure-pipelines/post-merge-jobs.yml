jobs:
- job: 'build'
  pool: 'Win-CPU-2019'
  variables:
    OrtPackageId: 'Microsoft.ML.OnnxRuntime'
    MsbuildArguments: '-maxcpucount'
    OnnxRuntimeBuildDirectory: '$(Build.BinariesDirectory)'
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    EnvSetupScript: setup_env.bat
    buildArch: x64
    BuildConfig: 'Debug'
    setVcvars: true
  timeoutInMinutes: 90
  workspace:
    clean: all
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      addToPath: true
      architecture: $(buildArch)

  - task: BatchScript@1
    displayName: 'setup env'
    inputs:
      filename: '$(Build.SourcesDirectory)\tools\ci_build\github\windows\$(EnvSetupScript)'
      modifyEnvironment: true
      workingFolder: '$(Build.BinariesDirectory)'

  - script: |
     python -m pip install -q pyopenssl setuptools wheel numpy scipy
     mkdir $(Build.SourcesDirectory)\$(BuildConfig)
    workingDirectory: '$(Build.BinariesDirectory)'
    displayName: 'Install python modules'

  - task: NuGetToolInstaller@0
    displayName: Use Nuget 4.9
    inputs:
      versionSpec: 4.9.4

  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      command: 'restore'
      feedsToUse: 'config'
      restoreSolution: '$(Build.SourcesDirectory)\packages.config'
      nugetConfigPath: '$(Build.SourcesDirectory)\NuGet.config'
      restoreDirectory: '$(Build.BinariesDirectory)\$(BuildConfig)'

  - task: CMake@1
    inputs:
      workingDirectory: '$(Build.BinariesDirectory)\$(BuildConfig)'
      cmakeArgs: $(Build.SourcesDirectory)\cmake -Donnxruntime_RUN_ONNX_TESTS=ON -Donnxruntime_DEV_MODE=ON -Donnxruntime_USE_CUDA=OFF -Donnxruntime_USE_NSYNC=OFF -Donnxruntime_CUDNN_HOME= -Donnxruntime_USE_FEATURIZERS=OFF -Donnxruntime_CUDA_HOME= -Donnxruntime_USE_JEMALLOC=OFF -Donnxruntime_USE_MIMALLOC=OFF -Donnxruntime_ENABLE_PYTHON=OFF -Donnxruntime_BUILD_CSHARP=OFF -Donnxruntime_BUILD_JAVA=OFF -Donnxruntime_BUILD_SHARED_LIB=OFF -Donnxruntime_USE_EIGEN_FOR_BLAS=ON -Donnxruntime_USE_OPENBLAS=OFF -Donnxruntime_USE_DNNL=OFF -Donnxruntime_USE_MKLML=OFF -Donnxruntime_USE_OPENMP=OFF', -Donnxruntime_USE_FULL_PROTOBUF=OFF -Donnxruntime_DISABLE_CONTRIB_OPS=OFF -Donnxruntime_MSVC_STATIC_RUNTIME=OFF -Donnxruntime_USE_DML=OFF -Donnxruntime_USE_TELEMETRY=OFF -A x64 -T host=x64 -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=$(BuildConfig)

  - task: VSBuild@1
    displayName: 'Build'
    inputs:
      solution: '$(Build.BinariesDirectory)\$(BuildConfig)\onnxruntime.sln'
      platform: 'x64'
      configuration: $(BuildConfig)
      msbuildArgs: $(MsbuildArguments)
      msbuildArchitecture: $(buildArch)
      maximumCpuCount: true
      logProjectEvents: false
      workingFolder: '$(Build.BinariesDirectory)\$(BuildConfig)'
      createLogFile: true

  - template: templates/set-test-data-variables-step.yml


  - task: BatchScript@1
    displayName: 'Setup VS2019 env vars'
    inputs:
      filename: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
      arguments: $(buildArch)
      modifyEnvironment: true

  - script: |
     set PATH=$(Build.BinariesDirectory)\$(BuildConfig)\$(BuildConfig);%PATH%
     mklink  /D /J $(Build.BinariesDirectory)\$(BuildConfig)\models $(Build.BinariesDirectory)\models

  - task: VSTest@2
    displayName: 'VsTest - testAssemblies'
    inputs:
      testAssemblyVer2: 'onnxruntime_test_all.exe'
      searchFolder: '$(Build.BinariesDirectory)\Debug\Debug'
      runSettingsFile: 'cmake\\codeconv.runsettings'
      pathtoCustomTestAdapters: '$(Build.BinariesDirectory)\Debug\googletestadapter.0.17.1\build\_common'
      codeCoverageEnabled: true
      platform: x64

  - task: PublishTestResults@2
    inputs:
      searchFolder: '$(Build.BinariesDirectory)\$(BuildConfig)\$(BuildConfig)\TestResults'
      testResultsFormat: 'VSTest'
      testResultsFiles: '**'
    condition: succeededOrFailed()

  - template: templates/component-governance-component-detection-steps.yml
    parameters :
      condition : 'succeeded'

  - template: templates/clean-agent-build-directory-step.yml

