parameters:
- name: QnnSdk
  displayName: QNN SDK Version
  type: string
  default: 2.31.0.250130

- name: build_config
  displayName: Build Configuration
  type: string
  default: 'RelWithDebInfo'

- name: IsReleaseBuild
  displayName: Is a release build? Set it to true if you are doing an Onnx Runtime release.
  type: boolean
  default: false

- name: DoEsrp
  displayName: Run code sign tasks? Must be true if you are doing an Onnx Runtime release.
  type: boolean
  default: true

# these 2 parameters are used for debugging.
- name: SpecificArtifact
  displayName: Use Specific Artifact (Debugging only)
  type: boolean
  default: false

- name: BuildId
  displayName: Pipeline BuildId, you could find it in the URL
  type: string
  default: '0'
resources:
  repositories:
  - repository: 1esPipelines
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  # The pipeline extends the 1ES PT which will inject different SDL and compliance tasks.
  # For non-production pipelines, use "Unofficial" as defined below.
  # For productions pipelines, use "Official".
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    sdl:
      sourceAnalysisPool:
        name: onnxruntime-Win-CPU-2022
        os: windows
    stages:

    - template: templates/qnn-ep-win.yml
      parameters:
        qnn_ep_build_pool_name: 'Onnxruntime-QNNEP-Windows-2022-CPU'
        QnnSdk: ${{ parameters.QnnSdk }}
        IsReleaseBuild: ${{ parameters.IsReleaseBuild }}
        DoEsrp: ${{ parameters.DoEsrp }}
        ArtifactName: 'drop-nuget-qnn-x64'
        StageName: 'OnnxRuntime_QNN_Nuget_Win_x64'
        build_config: ${{ parameters.build_config }}

    - template: templates/qnn-ep-win.yml
      parameters:
        qnn_ep_build_pool_name: 'Onnxruntime-QNNEP-Windows-2022-CPU'
        QnnSdk: ${{ parameters.QnnSdk }}
        IsReleaseBuild: ${{ parameters.IsReleaseBuild }}
        DoEsrp: ${{ parameters.DoEsrp }}
        ArtifactName: 'drop-nuget-qnn-arm64'
        buildParameter: '--arm64'
        buildPlatform: 'ARM64'
        buildArch: 'ARM64'
        StageName: 'OnnxRuntime_QNN_Nuget_Win_Arm64'
        build_config: ${{ parameters.build_config }}

    - template: stages/nuget-qnn-packaging-stage.yml
      parameters:
        DoEsrp: ${{ parameters.DoEsrp }}

    - template: templates/publish-nuget-steps.yml
      parameters:
        download_artifacts_steps:
        - template: templates/flex-downloadPipelineArtifact.yml
          parameters:
            StepName: 'Download Pipeline Artifact - Signed NuGet Qnn Package'
            ArtifactName: 'drop-signed-nuget-qnn'
            targetPath: '$(Build.BinariesDirectory)/nuget-artifact/final-package'
            SpecificArtifact: ${{ parameters.specificArtifact }}
            BuildId: ${{ parameters.BuildId }}
