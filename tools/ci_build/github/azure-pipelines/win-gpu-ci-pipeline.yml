trigger:
  branches:
    include:
    - main
    - rel-*
  paths:
    exclude:
    - docs/**
    - README.md
    - CONTRIBUTING.md
    - BUILD.md
pr:
  branches:
    include:
    - main
    - rel-*
  paths:
    exclude:
    - docs/**
    - README.md
    - CONTRIBUTING.md
    - BUILD.md

parameters:
- name: RunOnnxRuntimeTests
  displayName: Run Tests?
  type: boolean
  default: true

stages:
- stage: cuda
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env_cuda_11.bat
        buildArch: x64
        additionalBuildFlags: --enable_pybind --build_java --build_nodejs --use_cuda --cuda_version=11.6 --cuda_home="C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.6" --enable_cuda_profiling --cmake_extra_defines CMAKE_CUDA_ARCHITECTURES=75
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_RelWithDebInfo
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        ORT_EP_NAME: CUDA
        WITH_CACHE: true
        MachinePool: onnxruntime-Win2019-GPU-T4

- stage: training
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env_cuda_11.bat
        buildArch: x64
        additionalBuildFlags: --enable_pybind --enable_training --use_cuda --cuda_version=11.6 --cuda_home="C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.6" --skip_onnx_tests --cmake_extra_defines CMAKE_CUDA_ARCHITECTURES=75
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_RelWithDebInfo
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        ORT_EP_NAME: CUDA
        WITH_CACHE: true
        MachinePool: onnxruntime-Win2019-GPU-training-T4
        isTraining: true

- stage: dml
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --enable_pybind --use_dml --enable_wcos  --use_winml
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_RelWithDebInfo
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        ORT_EP_NAME: DML
        WITH_CACHE: true
        # DirectML cannot run on T4 GPUs.
        MachinePool: onnxruntime-Win2019-GPU-dml

- stage: kernelDocumentation
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env_cuda_11.bat
        buildArch: x64
        # note: need to specify `--gen_doc` when creating the build config so it has to be in additionalBuildFlags
        additionalBuildFlags: --gen_doc validate --skip_tests --enable_pybind --use_dml --use_cuda --cuda_version=11.6 --cuda_home="C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.6" --cmake_extra_defines CMAKE_CUDA_ARCHITECTURES=75 --cmake_extra_defines onnxruntime_BUILD_UNIT_TESTS=OFF
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_RelWithDebInfo
        RunOnnxRuntimeTests: false
        RunStaticCodeAnalysis: false
        GenerateDocumentation: true
        ORT_EP_NAME: CUDA # It doesn't really matter which EP is selected here since this stage is for documentation.
        WITH_CACHE: true
        MachinePool: onnxruntime-Win2019-GPU-T4
