# sets up common build tools for the windows build machines before build

parameters:
- name: DoEsrp
  displayName: Run code sign tasks? Must be true if you are doing an Onnx Runtime release.
  type: boolean
  default: true

- name: buildConfig
  displayName: buildConfig
  type: string
  default: 'RelWithDebInfo'
  
- name: artifactName
  displayName: artifactNameï¼Œlike 'onnxruntime-win-x64-1.6.0'
  type: string
  default: ''
  
- name: artifactNameNoVersionString
  type: string
  default: 'onnxruntime-win-x64'

- name: commitId
  displayName: commitId
  type: string
  default: ''

steps:
    - task: CmdLine@2
      displayName: 'Copy build artifacts for zipping'
      inputs:
        script: |
          mkdir $(Build.BinariesDirectory)\${{parameters.artifactName}}
          mkdir $(Build.BinariesDirectory)\${{parameters.artifactName}}\lib
          mkdir $(Build.BinariesDirectory)\${{parameters.artifactName}}\include

          echo "Directories created"            
          copy $(Build.BinariesDirectory)\${{parameters.buildConfig}}\${{parameters.buildConfig}}\onnxruntime.dll $(Build.BinariesDirectory)\${{parameters.artifactName}}\lib
          copy $(Build.BinariesDirectory)\${{parameters.buildConfig}}\${{parameters.buildConfig}}\onnxruntime.pdb $(Build.BinariesDirectory)\${{parameters.artifactName}}\lib
          copy $(Build.BinariesDirectory)\${{parameters.buildConfig}}\${{parameters.buildConfig}}\onnxruntime.lib $(Build.BinariesDirectory)\${{parameters.artifactName}}\lib
          copy $(Build.SourcesDirectory)\include\onnxruntime\core\session\onnxruntime_*.h  $(Build.BinariesDirectory)\${{parameters.artifactName}}\include
          copy $(Build.SourcesDirectory)\include\onnxruntime\core\providers\cpu\cpu_provider_factory.h  $(Build.BinariesDirectory)\${{parameters.artifactName}}\include
          copy $(Build.SourcesDirectory)\include\onnxruntime\core\providers\cuda\cuda_provider_factory.h  $(Build.BinariesDirectory)\${{parameters.artifactName}}\include

          REM copy the README, licence and TPN
          copy $(Build.SourcesDirectory)\README.md $(Build.BinariesDirectory)\${{parameters.artifactName}}\README.md
          copy $(Build.SourcesDirectory)\docs\C_API.md $(Build.BinariesDirectory)\${{parameters.artifactName}}\C_API.md
          copy $(Build.SourcesDirectory)\docs\Privacy.md $(Build.BinariesDirectory)\${{parameters.artifactName}}\Privacy.md
          copy $(Build.SourcesDirectory)\LICENSE $(Build.BinariesDirectory)\${{parameters.artifactName}}\LICENSE
          copy $(Build.SourcesDirectory)\ThirdPartyNotices.txt $(Build.BinariesDirectory)\${{parameters.artifactName}}\ThirdPartyNotices.txt
          copy $(Build.SourcesDirectory)\VERSION_NUMBER $(Build.BinariesDirectory)\${{parameters.artifactName}}\VERSION_NUMBER
          @echo ${{parameters.commitId}} > $(Build.BinariesDirectory)\${{parameters.artifactName}}\GIT_COMMIT_ID

        workingDirectory: '$(Build.BinariesDirectory)\${{parameters.buildConfig}}'


    - template: win-esrp-dll.yml
      parameters:
        FolderPath: '$(Build.BinariesDirectory)\${{parameters.artifactName}}'
        DisplayName: 'ESRP - Sign Native dlls'
        DoEsrp: ${{parameters.DoEsrp}}
        Pattern: '*.dll,*.exe'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)\${{parameters.artifactName}}' 
        includeRootFolder: true
        archiveType: 'zip' # Options: zip, 7z, tar, wim
        archiveFile: '$(Build.ArtifactStagingDirectory)\${{parameters.artifactName}}.zip' 
        replaceExistingArchive: true 

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)\${{parameters.artifactName}}.zip' 
        artifactName: '${{parameters.artifactNameNoVersionString}}'