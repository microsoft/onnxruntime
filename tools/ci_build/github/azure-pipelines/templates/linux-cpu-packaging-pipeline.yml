parameters:
- name: AdditionalBuildFlags
  displayName: Additional build flags for build.py
  type: string
  default: ''

- name: stage_name_suffix
  displayName: Suffix for stage name as every stage name needs to be unique
  type: string
  default: 'CPU'

- name: ArtifactNamePrefix
  displayName: Prefix for artifact name
  type: string
  default: onnxruntime

- name: PackageJava
  type: boolean
  default: true

- name: PackageNodejs
  type: boolean
  default: true

stages:
- stage: Linux_C_API_Packaging_${{ parameters.stage_name_suffix }}
  dependsOn: [ ]
  jobs:
  - template: c-api-linux-cpu.yml
    parameters:
      AdditionalBuildFlags: ${{ parameters.AdditionalBuildFlags }}
      BaseImage: 'amd64/almalinux:8'
      OnnxruntimeArch: 'x64'
      OnnxruntimeCFlags: '-Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fstack-protector-strong -fstack-clash-protection -fcf-protection -O3 -Wl,--strip-all'
      OnnxruntimeCXXFlags: '-Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fstack-protector-strong -fstack-clash-protection -fcf-protection -O3 -Wl,--strip-all'
      OnnxruntimeNodejsBindingArch: 'x64'
      PoolName: 'onnxruntime-Ubuntu2004-AMD-CPU'
      ArtifactNamePrefix: ${{ parameters.ArtifactNamePrefix }}
      PackageJava: ${{ parameters.PackageJava }}
      PackageNodeJS: ${{ parameters.PackageNodeJS }}

  - template: c-api-linux-cpu.yml
    parameters:
      AdditionalBuildFlags: ${{ parameters.AdditionalBuildFlags }}
      BaseImage: 'arm64v8/almalinux:8'
      OnnxruntimeArch: 'aarch64'
      OnnxruntimeCFlags: '-Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fstack-protector-strong -fstack-clash-protection -O3 -Wl,--strip-all'
      OnnxruntimeCXXFlags: '-Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fstack-protector-strong -fstack-clash-protection -O3 -Wl,--strip-all'
      OnnxruntimeNodejsBindingArch: 'arm64'
      PoolName: 'aiinfra-linux-ARM64-CPU-2019'
      ArtifactNamePrefix: ${{ parameters.ArtifactNamePrefix }}
      PackageJava: ${{ parameters.PackageJava }}
      PackageNodeJS: ${{ parameters.PackageNodeJS }}
