parameters:
  JobName: 'MacOS_CI_Dev'
  SubmoduleCheckoutMode: ''
  BuildCommand: ''
  DoNugetPack: 'false'
  NuPackScript: ''

jobs:
- job: ${{ parameters.JobName }}
  workspace:
    clean: all
  timeoutInMinutes:  120
  pool:
    vmImage: 'macOS-10.14'
  variables:
    BuildCommand: ${{ parameters.BuildCommand }}
  steps:
    - checkout: self
      ${{ if ne(parameters.SubmoduleCheckoutMode, '') }}:
        submodules: ${{ parameters.SubmoduleCheckoutMode }}
    - script: |
        export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home
        java --version
        javac --version

        sudo python3 -m pip install -r '$(Build.SourcesDirectory)/tools/ci_build/github/linux/docker/scripts/requirements.txt'
        sudo xcode-select --switch /Applications/Xcode_10.app/Contents/Developer
        ${{ parameters.BuildCommand }}
      displayName: 'Build and Test OnnxRuntime lib for MacOS'
    - task: PublishTestResults@2
      displayName: 'Publish unit test results'
      inputs:
        testResultsFiles: '**/*.results.xml'
        searchFolder: '$(Build.BinariesDirectory)'
        testRunTitle: 'Unit Test Run'
      condition: succeededOrFailed()
    - ${{ if eq(parameters['DoNugetPack'], 'true') }}:
      - script: |
         ${{ parameters.NuPackScript }}
        displayName: 'Copy MacOS libs to Artifact Staging'
      - task: PublishPipelineArtifact@0
        displayName: 'Publish Pipeline Artifact'
        inputs:
          artifactName: 'drop-osx'
          targetPath: '$(Build.ArtifactStagingDirectory)'
    - template: component-governance-component-detection-steps.yml
      parameters :
        condition : 'succeeded'
    - template: clean-agent-build-directory-step.yml
