parameters:
  AgentPool : 'onnxruntime-Ubuntu2004-AMD-CPU'
  StageName : 'Linux_CI_Dev'
  RunDockerBuildArgs: '-o ubuntu20.04 -d cpu -x "--build_wheel"'
  NuPackScript: ''
  RunInjectedPipeline: 'false'
  InjectedPipeline: ''
  DockerImageTag: ''
  TimeoutInMinutes: 120
  # Controls whether unreleased onnx opsets are allowed. Default is set to 1
  AllowReleasedOpsetOnly: '1'

jobs:
- job: ${{ parameters.StageName }}
  workspace:
    clean: all
  timeoutInMinutes:  ${{ parameters.TimeoutInMinutes }}
  variables:
    ALLOW_RELEASED_ONNX_OPSET_ONLY: ${{ parameters.AllowReleasedOpsetOnly }}
    skipComponentGovernanceDetection: true
  pool: ${{ parameters.AgentPool }}
  steps:
    - checkout: self
    - template: run-docker-build-steps.yml
      parameters:
        RunDockerBuildArgs: '${{ parameters.RunDockerBuildArgs }}'
    - task: PublishTestResults@2
      displayName: 'Publish unit test results'
      inputs:
        testResultsFiles: '**/*.results.xml'
        searchFolder: '$(Build.BinariesDirectory)'
        testRunTitle: 'Unit Test Run'
      condition: succeededOrFailed()
    - ${{ if eq(parameters['RunInjectedPipeline'], 'true') }}:
      - template: |
         ${{ parameters.InjectedPipeline }}
        parameters:
          DockerImageTag: ${{ parameters.DockerImageTag }}
          BuildConfig: Release
    - template: clean-agent-build-directory-step.yml
