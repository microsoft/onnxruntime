# sets up common build tools for the windows build machines before build

parameters:
  EnvSetupScript: ''
  DoDataDownload: true
steps:
    - task: NuGetToolInstaller@0
      displayName: Use Nuget 5.7.0
      inputs:
        versionSpec: 5.7.0
    # - task: UniversalPackages@0
    #   displayName: 'Download python'
    #   inputs:
    #     command: download
    #     vstsFeed: '$(System.TeamProject)'
    #     vstsFeedPackage: 'miniconda3_win64'
    #     vstsPackageVersion: '4.5.11'
    #     downloadDirectory: '$(Build.BinariesDirectory)\python'

    # Temporary bypass of artifacts permission issue
    - task: PowerShell@2
      displayName: 'Download AzCopy (used for download test data script)'
      inputs:
        targetType: 'inline'
        script: |
          Invoke-WebRequest -OutFile $(Build.BinariesDirectory)\azcopy.exe https://onnxruntimetestdata.blob.core.windows.net/models/azcopy.exe

    - task: CmdLine@1
      displayName: 'Download Python'
      inputs:
        filename: '$(Build.BinariesDirectory)\azcopy.exe'
        arguments: 'copy https://onnxruntimetestdata.blob.core.windows.net/models/Miniconda3-4.7.10-Windows-x86_64.exe $(Build.BinariesDirectory)\Miniconda3-4.7.10-Windows-x86_64.exe'
      timeoutInMinutes: 10

    - task: CmdLine@1
      displayName: 'Run python installer'
      inputs:
        filename: '$(Build.BinariesDirectory)\Miniconda3-4.7.10-Windows-x86_64.exe'
        arguments: '/S /NoRegistry=1 /AddToPath=0 /RegisterPython=0 /D=$(Build.BinariesDirectory)\packages\python'
      timeoutInMinutes: 10

    - task: BatchScript@1
      displayName: 'setup env'
      inputs:
        filename: '$(Build.SourcesDirectory)\tools\ci_build\github\windows\${{parameters.EnvSetupScript}}'
        modifyEnvironment: true
        workingFolder: '$(Build.BinariesDirectory)'
    - task: CmdLine@1
      displayName: 'Install conda modules'
      inputs:
        filename: '$(Build.BinariesDirectory)\packages\python\scripts\conda.exe'
        arguments: 'install -q --insecure -y pyopenssl setuptools wheel numpy'
      timeoutInMinutes: 10


    - task: CmdLine@1
      continueOnError: true
      displayName: 'Run OpenCPPCoverage installer'
      condition: ${{parameters.DoDataDownload}}
      inputs:
        filename: '$(Build.BinariesDirectory)\installer\opencppcoverage\installer.exe'
        arguments: '/SP- /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /DIR="$(Build.BinariesDirectory)\OpenCppCoverage"'    
