parameters:

- name: MACHINE_POOL
  type: string
  default: 'onnxruntime-qnn-windows-vs-2022-arm64'

- name: QNN_SDK
  displayName: QNN SDK Version
  type: string
  default: 2.36.1.250708

- name: ENV_SETUP_SCRIPT
  type: string
  default: ''

- name: BUILD_PY_PARAMETERS
  displayName: >
    Extra parameters to pass to build.py. Don't put newlines in here.
  type: string
  default: ''

- name: is1ES
  displayName: 'Whether the pipeline is running in 1ES'
  type: boolean
  default: false

jobs:
- job: Win_py_arm64_qnn_Wheels
  timeoutInMinutes: 210
  workspace:
    clean: all
  pool:
    name: ${{ parameters.MACHINE_POOL }}
    os: windows
    hostArchitecture: Arm64
  templateContext:
    sdl:
      codeSignValidation:
        enabled: true
        # TODO: check why pyd file was not signed
        break: false
        additionalTargetsGlobPattern: f|**\*.pyd
      psscriptanalyzer:
        enabled: true
      binskim:
        enabled: true
        scanOutputDirectoryOnly: true
    outputs:
    - output: pipelineArtifact
      targetPath: $(Build.ArtifactStagingDirectory)
      artifactName: onnxruntime_qnn_arm64_$(PythonVersion)

  strategy:
    matrix:
      Python311_arm64:
        PythonVersion: '3.11.0'
        LocalPythonDir: 'C:\Python\Python311'
      Python312_arm64:
        PythonVersion: '3.12.6'
        LocalPythonDir: 'C:\Python\Python312'
      Python313_arm64:
        PythonVersion: '3.13.2'
        LocalPythonDir: 'C:\Python\Python313'
  variables:
    GRADLE_OPTS: '-Dorg.gradle.daemon=false'
    VSGenerator: 'Visual Studio 17 2022'
  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - template: telemetry-steps.yml

  - script: |
      MKDIR $(Agent.ToolsDirectory)\Python\$(PythonVersion)\arm64
      XCOPY /s /y /h /e /c /q "$(LocalPythonDir)\*.*" $(Agent.ToolsDirectory)\Python\$(PythonVersion)\arm64\
      COPY NUL $(Agent.ToolsDirectory)\Python\$(PythonVersion)\arm64.complete
      DIR $(Agent.ToolsDirectory)\Python
      DIR $(Agent.ToolsDirectory)\Python\$(PythonVersion)
      DIR $(Agent.ToolsDirectory)\Python\$(PythonVersion)\arm64
    displayName: Copy python $(PythonVersion) version to agent tools directory

  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(PythonVersion)
      addToPath: true
      architecture: 'arm64'

  - task: PipAuthenticate@1
    displayName: 'Pip Authenticate'
    inputs:
      artifactFeeds: 'Lotus'

  - task: PythonScript@0
    inputs:
      scriptSource: inline
      script: |
        import subprocess
        subprocess.call(['pip', 'install', '-q', 'setuptools', 'wheel'])
      workingDirectory: '$(Build.BinariesDirectory)'
      displayName: 'Install python modules'

  - template: set-nightly-build-option-variable-step.yml

  - template: jobs/download_win_qnn_sdk.yml
    parameters:
      QnnSDKVersion: ${{ parameters.QNN_SDK }}

  - task: PythonScript@0
    displayName: 'Generate cmake config'
    inputs:
      scriptPath: '$(Build.SourcesDirectory)\tools\ci_build\build.py'
      arguments: >
        --config RelWithDebInfo
        --build_dir $(Build.BinariesDirectory)
        --skip_submodule_sync
        --cmake_generator "$(VSGenerator)"
        --build_shared_lib
        --use_qnn
        --qnn_home $(QnnSDKRootDir)
        --enable_pybind
        --parallel --use_vcpkg --use_vcpkg_ms_internal_asset_cache --update
        $(TelemetryOption) ${{ parameters.BUILD_PY_PARAMETERS }}
      workingDirectory: '$(Build.BinariesDirectory)'

  - task: VSBuild@1
    displayName: 'Build'
    inputs:
      solution: '$(Build.BinariesDirectory)\RelWithDebInfo\onnxruntime.sln'
      platform: 'arm64'
      configuration: RelWithDebInfo
      msbuildArchitecture: 'arm64'
      maximumCpuCount: true
      logProjectEvents: true
      workingFolder: '$(Build.BinariesDirectory)\RelWithDebInfo'
      createLogFile: true

  # Esrp signing
  - template: win-esrp-dll.yml
    parameters:
      FolderPath: '$(Build.BinariesDirectory)\RelWithDebInfo\RelWithDebInfo\onnxruntime\capi'
      DisplayName: 'ESRP - Sign Native dlls'
      DoEsrp: true
      Pattern: '*.pyd'

  - task: PythonScript@0
    displayName: 'Build wheel'
    inputs:
      scriptPath: '$(Build.SourcesDirectory)\setup.py'
      arguments: 'bdist_wheel $(NightlyBuildOption) --wheel_name_suffix=qnn'
      workingDirectory: '$(Build.BinariesDirectory)\RelWithDebInfo\RelWithDebInfo'

  - task: CopyFiles@2
    displayName: 'Copy Python Wheel to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: '$(Build.BinariesDirectory)\RelWithDebInfo\RelWithDebInfo\dist'
      Contents: '*.whl'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
