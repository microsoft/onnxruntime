parameters:
- name: WithCache
  displayName: Build with Cache
  type: boolean
  default: false

- name: Today
  type: string
  default: ""

- name: CacheDir
  type: string
  default: "$(Agent.TempDirectory)/ort_ccache"

- name: AdditionalKey
  type: string
  default: ""

# it is used to pass additional arguments to build.py
- name: BuildPyArguments
  type: string
  default: ""

# it is used to pass msbuild arguments to VSBuild@1
- name: MsbuildArguments
  type: string
  default: ""

# it is used to pass platform arguments to VSBuild@1
- name: Platform
  type: string
  default: "x64"

# it is used to pass configuration arguments to VSBuild@1
- name: BuildConfig
  type: string

# it is used to pass msbuildArchitecture arguments to VSBuild@1
- name: BuildArch
  type: string

- name: CacheArg
  type: string
  default: '/p:CLToolExe=cl.exe /p:CLToolPath=C:\ProgramData\chocolatey\bin /p:TrackFileAccess=false /p:UseMultiToolTask=true /p:DebugInformationFormat=OldStyle'

steps:
  - ${{ if eq(parameters.WithCache, true) }}:
    - task: Cache@2
      inputs:
        ${{if eq(variables['Build.SourceBranchName'], 'merge')}}:
          key: ' "$(TODAY)" | ${{parameters.AdditionalKey}} | merge '
        ${{else}}:
          key: '"$(TODAY)" | onnxruntime | ${{parameters.AdditionalKey}} | $(Build.SourceVersion) '
        path: ${{parameters.CacheDir}}
        restoreKeys: |
          "$(TODAY)" | onnxruntime | ${{parameters.AdditionalKey}}
      displayName: Cache Task

  - task: PythonScript@0
    displayName: 'Generate cmake config'
    inputs:
      scriptPath: '$(Build.SourcesDirectory)\tools\ci_build\build.py'
      ${{ if eq(parameters.WithCache, true) }}:
        arguments: '${{parameters.BuildPyArguments}} --use_cache'
      ${{ else }}:
        arguments: '${{parameters.BuildPyArguments}}'
      workingDirectory: '$(Build.BinariesDirectory)'

  - task: VSBuild@1
    displayName: 'Build'
    inputs:
      solution: '$(Build.BinariesDirectory)\${{parameters.BuildConfig}}\onnxruntime.sln'
      platform: ${{parameters.Platform}}
      configuration: ${{parameters.BuildConfig}}
      ${{ if eq(parameters.WithCache, true) }}:
        msbuildArgs: '${{parameters.MsbuildArguments}} ${{parameters.CacheArg}}'
      ${{ else }}:
        msbuildArgs: '${{parameters.MsbuildArguments}}'
      msbuildArchitecture: ${{parameters.BuildArch}}
      maximumCpuCount: true
      logProjectEvents: false
      workingFolder: '$(Build.BinariesDirectory)\${{parameters.BuildConfig}}'
      createLogFile: true
    env:
      CCACHE_DIR: ${{parameters.CacheDir}}

  - ${{ if eq(parameters.WithCache, true) }}:
    - powershell: |
        ccache -sv
        ccache -z
      displayName: cache stat
      env:
        CCACHE_DIR: ${{parameters.CacheDir}}
