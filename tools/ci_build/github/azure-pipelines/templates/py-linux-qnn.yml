parameters:
- name: machine_pool
  type: string

- name: cmake_build_type
  type: string
  default: 'Release'
  values:
  - Debug
  - Release
  - RelWithDebInfo
  - MinSizeRel

- name: device
  type: string
  default: 'NPU'

- name: with_cache
  type: boolean
  default: false

- name: extra_build_arg
  type: string
  default: ''

- name: QnnSdk
  displayName: QNN SDK version
  type: string
  default: 2.36.1.250708
  
- name: is1ES
  displayName: 'Whether the pipeline is running in 1ES'
  type: boolean
  default: false

jobs:
- job: Linux_py_qnn_Wheels_x64
  timeoutInMinutes: 240
  workspace:
    clean: all
  pool:
    name: ${{ parameters.machine_pool }}
    os: linux
  templateContext:
    outputs:
    - output: pipelineArtifact
      targetPath: $(Build.BinariesDirectory)/dist
      artifactName: onnxruntime-linux-qnn-x64

  variables:
  - name: extra_build_args
    ${{ if ne(parameters.extra_build_arg, '') }}:
      value: -x ${{ parameters.extra_build_arg }}
    ${{ if eq(parameters.extra_build_arg, '') }}:
      value: ''
  steps:
  - checkout: self
    clean: true
    submodules: none

  - template: jobs/download_linux_qnn_sdk.yml
    parameters:
      QnnSDKVersion: ${{ parameters.QnnSdk }}

  - template: set-nightly-build-option-variable-step.yml

  - template: get-docker-image-steps.yml
    parameters:
      Dockerfile: tools/ci_build/github/linux/docker/inference/x86_64/python/cpu/Dockerfile
      Context: tools/ci_build/github/linux/docker/inference/x86_64/python/cpu
      DockerBuildArgs: "--build-arg BUILD_UID=$( id -u )"
      Repository: onnxruntimecpubuildpythonx86_64_qnn

  - task: Bash@3
    displayName: 'Build Python Wheel'
    inputs:
      targetType: filePath
      filePath: tools/ci_build/github/linux/run_python_dockerbuild.sh
      arguments: -i onnxruntimecpubuildpythonx86_64_qnn -d "${{ parameters.device }}" -c ${{ parameters.cmake_build_type }} $(extra_build_args)
    env:
      ADDITIONAL_DOCKER_PARAMETER: "--volume $(QnnSDKRootDir):/qnn_sdk"

