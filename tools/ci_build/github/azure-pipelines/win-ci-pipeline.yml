parameters:
- name: RunOnnxRuntimeTests
  displayName: Run Tests?
  type: boolean
  default: true

stages:
- stage: x64_debug
  dependsOn: []
  jobs:
    - template: templates/win-cpu-ci.yml
      parameters:
        BuildConfig: 'Debug'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --build_java --build_nodejs --build_wheel
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_debug
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false

- stage: x64_release
  dependsOn: []
  jobs:
    - template: templates/win-cpu-ci.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        # Compare to our Nuget packaging pipeline, this job has "--build_wheel" but doesn't have "--enable_lto --disable_rtti --use_telemetry  --enable_wcos"
        # Python bindings use typeid so I can't disable RTTI here. If it causes a problem, we will need to split this job to two jobs.
        additionalBuildFlags: --build_wheel --build_java --build_nodejs
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_release
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: true
        
- stage: x64_release_dnnl
  dependsOn: []
  jobs:
    - template: templates/win-cpu-ci.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --build_wheel --use_dnnl --build_java
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_release
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        

- stage: x64_release_winml
  dependsOn: []
  jobs:
    - template: templates/win-cpu-ci.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --use_winml --enable_wcos --disable_rtti
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_release_winml
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        # WinML has many warnings
        RunStaticCodeAnalysis: false
        EnablePython: false

- stage: x86_release
  dependsOn: []
  jobs:
    - template: templates/win-cpu-ci.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env_x86.bat
        buildArch: x86
        additionalBuildFlags: --build_wheel
        msbuildPlatform: Win32
        isX86: true
        job_name_suffix: x86_release
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: true

- stage: training_x64_debug
  dependsOn: []
  jobs:
    - template: templates/win-cpu-ci.yml
      parameters:
        BuildConfig: 'Debug'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --enable_training --build_wheel
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: training_x64_debug
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false

- stage: training_x64_release
  dependsOn: []
  jobs:
    - template: templates/win-cpu-ci.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --enable_training --build_wheel
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: training_x64_release
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        # Liqun is fixing them
        RunStaticCodeAnalysis: true
