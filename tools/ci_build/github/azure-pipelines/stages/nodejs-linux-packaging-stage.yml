parameters:
- name: CudaVersion
  type: string
  default: '12.2'

stages:
- stage: Linux_Nodejs_Packaging_x64
  dependsOn: []
  jobs:
  - job: Linux_Nodejs_Packaging_x64
    dependsOn: []
    workspace:
      clean: all
    timeoutInMinutes: 180
    pool:
      name: 'onnxruntime-Ubuntu2204-AMD-CPU'
      os: linux
    variables:
    - template: ../templates/common-variables.yml
    - name: CUDA_VERSION_MAJOR
      ${{ if eq(parameters.CudaVersion, '11.8') }}:
        value: '11'
      ${{ if eq(parameters.CudaVersion, '12.2') }}:
        value: '12'
    - name: CUDA_VERSION
      value: ${{ parameters.CudaVersion }}
    - name: linux_trt_version
      ${{ if eq(parameters.CudaVersion, '11.8') }}:
        value: ${{ variables.linux_trt_version_cuda11 }}
      ${{ if eq(parameters.CudaVersion, '12.2') }}:
        value: ${{ variables.linux_trt_version_cuda12 }}
    steps:
    - checkout: self
      clean: true
      submodules: recursive
    - template: ../templates/get-docker-image-steps.yml
      parameters:
        Dockerfile: tools/ci_build/github/linux/docker/inference/x86_64/default/cuda${{ variables.CUDA_VERSION_MAJOR }}/Dockerfile
        Context: tools/ci_build/github/linux/docker/inference/x86_64/default/cuda${{ variables.CUDA_VERSION_MAJOR }}
        DockerBuildArgs: "
          --build-arg TRT_VERSION=${{ variables.linux_trt_version }}
          --build-arg BUILD_UID=$( id -u )
          "
        Repository: onnxruntimecuda${{ variables.CUDA_VERSION_MAJOR }}xtrt86build
    - template: ../templates/set-version-number-variables-step.yml

    - script: $(Build.SourcesDirectory)/tools/ci_build/github/linux/build_nodejs_package.sh
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Build Node.js binding Package'

    - template: ../templates/nodejs-artifacts-package-and-publish-steps-posix.yml
      parameters:
        arch: 'x64'
        os: 'linux'
        artifactName: 'drop-onnxruntime-nodejs-linux-x64'

    - template: ../templates/clean-agent-build-directory-step.yml
