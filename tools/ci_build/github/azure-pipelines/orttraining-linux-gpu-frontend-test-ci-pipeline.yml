# 'trigger: none' to use UI to schedule the pipeline runs.
# alternatively to schedule the pipeline run according to:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/scheduled-triggers?view=azure-devops&tabs=yaml
trigger: none

jobs:
- job: Onnxruntime_Linux_GPU_Training_FrontEnd

  timeoutInMinutes: 240
  
  steps:
  - checkout: self
    clean: true
    submodules: recursive
  
  - template: templates/set-test-data-variables-step.yml

  - task: CmdLine@2
    displayName: 'Clean untagged docker images'
    inputs:
      script: |
        docker rm $(docker ps -a | grep Exited | awk '{print $1;}') || true
        docker container prune -f
        docker image prune -f
      workingDirectory: $(Build.BinariesDirectory)
    continueOnError: true
    condition: always()

  # insert a python frontend test data preparation step here

  - script: >
      tools/ci_build/github/linux/run_dockerbuild.sh
      -o ubuntu16.04 -d gpu -r $(Build.BinariesDirectory)
      -x "
      --enable_training
      --config RelWithDebInfo
      --skip_onnx_tests
      --build_wheel
      --enable_training_python_frontend_e2e_tests
      "
    displayName: 'Build and run frontend tests'

  - template: templates/clean-agent-build-directory-step.yml