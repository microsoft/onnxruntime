jobs:
- job: 'build'
  pool: 'Win-CPU-2019'
  strategy:
    maxParallel: 2
    matrix:
      debug:
        BuildConfig: 'Debug'
      release:
        BuildConfig: 'Release'
  variables:
    OnnxRuntimeBuildDirectory: '$(Build.BinariesDirectory)'
    EnvSetupScript: setup_env.bat
    buildArch: x64
  timeoutInMinutes: 120
  workspace:
    clean: all
  steps:    
  - task: UsePythonVersion@0
    inputs: 
      versionSpec: '3.7' 
      addToPath: true 
      architecture: $(buildArch)

  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'

  - task: BatchScript@1
    displayName: 'setup env'
    inputs:
      filename: '$(Build.SourcesDirectory)\tools\ci_build\github\windows\$(EnvSetupScript)'
      modifyEnvironment: true
      workingFolder: '$(Build.BinariesDirectory)'

  - script: |
     python -m pip install -q pyopenssl setuptools wheel numpy ninja flake8
    workingDirectory: '$(Build.BinariesDirectory)'
    displayName: 'Install python modules'

  - task: PythonScript@0
    displayName: 'Build and test'
    inputs:
      scriptPath: '$(Build.SourcesDirectory)\tools\ci_build\build.py'
      arguments: '--config $(BuildConfig) --build_dir $(Build.BinariesDirectory) --skip_submodule_sync --build_wasm --cmake_generator "Visual Studio 16 2019"'
      workingDirectory: '$(Build.BinariesDirectory)'

  - task: PublishTestResults@2
    displayName: 'Publish unit test results'
    inputs:
      testResultsFiles: '**/*.results.xml'
      searchFolder: '$(Build.BinariesDirectory)'
      testRunTitle: 'Unit Test Run'
    condition: succeededOrFailed()

  - template: templates/component-governance-component-detection-steps.yml
    parameters :
      condition : 'succeeded'

  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()
