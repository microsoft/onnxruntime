jobs:
  - job: Linux_TVM_CI
    timeoutInMinutes: 180
    workspace:
      clean: all
    pool: Linux-CPU-2019
    steps:
      - checkout: self
        clean: true
        submodules: recursive

      - template: templates/get-docker-image-steps.yml
        parameters:
          Dockerfile: tools/ci_build/github/linux/docker/Dockerfile.ubuntu
          Context: tools/ci_build/github/linux/docker
          DockerBuildArgs: "--build-arg BUILD_UID=$( id -u )"
          Repository: onnxruntimecpubuild

      - task: CmdLine@2
        inputs:
          script: |
            mkdir -p $HOME/.onnx
            docker run --rm \
              --volume /data/onnx:/data/onnx:ro \
              --volume $(Build.SourcesDirectory):/onnxruntime_src \
              --volume $(Build.BinariesDirectory):/build \
              --volume /data/models:/build/models:ro \
              --volume $HOME/.onnx:/home/onnxruntimedev/.onnx \
              -e NIGHTLY_BUILD \
              -e BUILD_BUILDNUMBER \
              onnxruntimecpubuild \
                /bin/bash -c \
                  "/onnxruntime_src/tools/ci_build/github/linux/tvm/install_tvm_test_dependencies.sh \
                    python3 && \
                  python3 /onnxruntime_src/tools/ci_build/build.py \
                    --build_dir /build \
                    --config Release \
                    --skip_submodule_sync \
                    --parallel \
                    --enable_pybind \
                    --disable_contrib_ops \
                    --disable_ml_ops \
                    --skip_onnx_tests \
                    --use_tvm"
          workingDirectory: $(Build.SourcesDirectory)

      - task: PublishTestResults@2
        displayName: 'Publish unit test results'
        inputs:
          testResultsFiles: '**/*.results.xml'
          searchFolder: '$(Build.BinariesDirectory)'
          testRunTitle: 'Unit Test Run'
        condition: succeededOrFailed()

      - template: templates/component-governance-component-detection-steps.yml
        parameters:
          condition: 'succeeded'

      - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
        displayName: 'Clean Agent Directories'
        condition: always()
