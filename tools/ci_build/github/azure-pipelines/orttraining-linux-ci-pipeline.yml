##### start trigger Don't edit it manually, Please do edit set-trigger-rules.py ####
### please do rerun set-trigger-rules.py ###
trigger:
  branches:
    include:
    - main
    - rel-*
  paths:
    exclude:
    - docs/**
    - README.md
    - CONTRIBUTING.md
    - BUILD.md
    - 'js/web'
    - 'onnxruntime/core/providers/js'
pr:
  branches:
    include:
    - main
    - rel-*
  paths:
    exclude:
    - docs/**
    - README.md
    - CONTRIBUTING.md
    - BUILD.md
    - 'js/web'
    - 'onnxruntime/core/providers/js'
#### end trigger ####

jobs:
- job: Linux_Build
  timeoutInMinutes: 180
  workspace:
    clean: all
  variables:
    skipComponentGovernanceDetection: true
    CCACHE_DIR: $(Pipeline.Workspace)/ccache
    TODAY: $[format('{0:dd}{0:MM}{0:yyyy}', pipeline.startTime)]
  pool: onnxruntime-Ubuntu-2204-Training-CPU
  steps:
  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()

  - checkout: self
    clean: true
    submodules: none

  - template: templates/get-docker-image-steps.yml
    parameters:
      Dockerfile: tools/ci_build/github/linux/docker/inference/x86_64/default/cpu/Dockerfile
      Context: tools/ci_build/github/linux/docker/inference/x86_64/default/cpu
      DockerBuildArgs: "--build-arg BUILD_UID=$( id -u ) --build-arg BASEIMAGE=registry.access.redhat.com/ubi8/ubi"
      Repository: onnxruntimecpubuildcentos8x64_packaging

  - task: Cache@2
    inputs:
      key: '"$(TODAY)" | "$(Build.SourceBranch)" | "$(Build.SourceVersion)"'
      path: $(CCACHE_DIR)
      cacheHitVar: CACHE_RESTORED
      restoreKeys: |
        "$(TODAY)" | "$(Build.SourceBranch)"
        "$(TODAY)" |
    displayName: Cach Task

  - task: CmdLine@2
    displayName: 'build'
    inputs:
      script: |
        set -e -x
        mkdir -p $HOME/.onnx
        mkdir -p $(Pipeline.Workspace)/ccache
        docker run --rm \
          --volume /data/onnx:/data/onnx:ro \
          --volume /data/models:/build/models:ro \
          --volume $(Build.SourcesDirectory):/onnxruntime_src \
          --volume $(Build.BinariesDirectory):/build \
          --volume $HOME/.onnx:/home/onnxruntimedev/.onnx \
          --volume $(Pipeline.Workspace)/ccache:/cache \
          -e ALLOW_RELEASED_ONNX_OPSET_ONLY=0 \
          -e NIGHTLY_BUILD \
          -e BUILD_BUILDNUMBER \
          -e CCACHE_DIR=/cache \
          onnxruntimecpubuildcentos8x64_packaging \
          /onnxruntime_src/tools/ci_build/github/linux/build_training_ci.sh
      workingDirectory: $(Build.SourcesDirectory)

  - task: PublishTestResults@2
    displayName: 'Publish unit test results'
    inputs:
      testResultsFiles: '**/*.results.xml'
      searchFolder: '$(Build.BinariesDirectory)'
      testRunTitle: 'Unit Test Run'
    condition: succeededOrFailed()
