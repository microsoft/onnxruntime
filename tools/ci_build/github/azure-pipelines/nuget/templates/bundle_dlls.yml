# Bundle dlls, so and dylib into respective runtime folders 
steps:
- script: |
   pushd $(Build.BinariesDirectory)\nuget-artifact
   dir
   powershell -Command "Invoke-WebRequest http://stahlworks.com/dev/unzip.exe -OutFile unzip.exe"
   powershell -Command "Invoke-WebRequest http://stahlworks.com/dev/zip.exe -OutFile zip.exe"
   set PATH=%CD%;%PATH%
   SETLOCAL EnableDelayedExpansion   
   FOR /R %%i IN (*.nupkg) do (
       set filename=%%~ni
       IF NOT "!filename:~25,7!"=="Managed" (
           rename %%~ni.nupkg %%~ni.zip
           unzip %%~ni.zip -d %%~ni
           del /Q %%~ni.zip
           unzip win-x86.zip -d win-x86
           unzip linux-x64.zip -d linux-x64
           mkdir %%~ni\runtimes\win-x86
           mkdir %%~ni\runtimes\linux-x64
           mkdir %%~ni\runtimes\win-x86\native
           mkdir %%~ni\runtimes\linux-x64\native
           move win-x86\runtimes\win-x86\native\onnxruntime.dll %%~ni\runtimes\win-x86\native\onnxruntime.dll
           move win-x86\runtimes\win-x86\native\onnxruntime.lib %%~ni\runtimes\win-x86\native\onnxruntime.lib
           move win-x86\runtimes\win-x86\native\onnxruntime.pdb %%~ni\runtimes\win-x86\native\onnxruntime.pdb
           move linux-x64\linux-x64\libonnxruntime.so %%~ni\runtimes\linux-x64\native\libonnxruntime.so
           unzip osx-x64.zip -d osx-x64
           dir osx-x64 /s
           mkdir %%~ni\runtimes\osx-x64
           mkdir %%~ni\runtimes\osx-x64\native
           move osx-x64\osx-x64\libonnxruntime.dylib %%~ni\runtimes\osx-x64\native\libonnxruntime.dylib
           move osx-x64\osx-x64\libonnxruntime.dylib.dSYM %%~ni\runtimes\osx-x64\native\libonnxruntime.dylib.dSYM
           pushd %%~ni
           zip -r ..\%%~ni.zip .
           popd
           move %%~ni.zip %%~ni.nupkg
       )
   )
   popd
   copy $(Build.BinariesDirectory)\nuget-artifact\*.nupkg $(Build.ArtifactStagingDirectory)
  displayName: 'Bundle Native NuGet and other binaries'

