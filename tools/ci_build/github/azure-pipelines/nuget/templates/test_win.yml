parameters:
  AgentPool : 'Win-CPU'
  NugetPackageName : ''
  ArtifactSuffix: ''
  StageSuffix: 'CPU'
  # More Suffix is used to differentiate testing for GPU and GPU-Windows/GPU-Linux packages
  MoreSuffix: ''
  # For inference packages, the test data artifact name is drop-extra and no suffix is required.
  # For training packages, to differentiate the artifact name we add '-training' suffix. This needs to be passed from
  # the parent pipeline.
  TestDataArtifactSuffix: ''
  CudaVersion: ''
  SpecificArtifact: false
  BuildId: ''

stages:
- stage: NuGet_Test_Win_${{ parameters.StageSuffix }}${{ parameters.MoreSuffix }}
  dependsOn:
  - Setup
  condition: succeeded()
  jobs:
  - job:  NuGet_Test_Win_${{ parameters.StageSuffix }}${{ parameters.MoreSuffix }}
    workspace:
      clean: all
    pool: ${{ parameters.AgentPool }}

    variables:
    - name: OnnxRuntimeBuildDirectory
      value: '$(Build.BinariesDirectory)'
    - name: SKIPNONPACKAGETESTS
      value: 'ON'
    - name: runCodesignValidationInjection
      value: false
    - name: CUDA_MODULE_LOADINGL
      value: 'LAZY'
    - name: GRADLE_OPTS
      value: '-Dorg.gradle.daemon=false'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.12'
        addToPath: true
        architecture: x64
    - task: PipAuthenticate@1
      displayName: 'Pip Authenticate'
      inputs:
        artifactFeeds: 'Lotus'

    - task: NuGetToolInstaller@0
      displayName: Use Nuget 6.10.x
      inputs:
        versionSpec: 6.10.x
    - ${{ if ne( parameters.CudaVersion, '') }}:
      - template: ../../templates/jobs/download_win_gpu_library.yml
        parameters:
          DownloadCUDA: true
          DownloadTRT: true
          CudaVersion: ${{ parameters.CudaVersion }}

    - task: BatchScript@1
      displayName: 'Setup Visual Studio env vars'
      inputs:
        filename: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
        arguments: 'amd64'
        modifyEnvironment: true


    - download: build
      displayName: 'Download Nuget'
      artifact: 'drop-signed-nuget-${{ parameters.ArtifactSuffix }}'
   

    - template: get-nuget-package-version-as-variable.yml
      parameters:
        packageFolder: '$(Pipeline.Workspace)/build/drop-signed-nuget-${{ parameters.ArtifactSuffix }}'

    - script: |
       mklink /D /J models C:\local\models
      workingDirectory: '$(Build.BinariesDirectory)'
      displayName: 'Create models link'

    # TODO: Add .Net Core AnyCPU test task

    - script: |
       @echo "Running Runtest.bat"
       test\Microsoft.ML.OnnxRuntime.EndToEndTests\runtest.bat $(Pipeline.Workspace)\build\drop-signed-nuget-${{ parameters.ArtifactSuffix }} net8.0 x64 $(NuGetPackageVersionNumber)
      workingDirectory: '$(Build.SourcesDirectory)\csharp'
      displayName: 'Run End to End Test (C#) .Net Core x64'
      env:
        PACKAGENAME: ${{ parameters.NugetPackageName }}

    # TODO: Add .Net Framework AnyCPU test task

    - script: |
       @echo "Running Runtest.bat"
       test\Microsoft.ML.OnnxRuntime.EndToEndTests\runtest.bat $(Pipeline.Workspace)\build\drop-signed-nuget-${{ parameters.ArtifactSuffix }} net462 x64 $(NuGetPackageVersionNumber)
      workingDirectory: '$(Build.SourcesDirectory)\csharp'
      displayName: 'Run End to End Test (C#) .NetFramework x64'
      env:
        PACKAGENAME: ${{ parameters.NugetPackageName }}
