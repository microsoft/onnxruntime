parameters:
  IsMacOS : 'true'
  ArtifactSuffix: ''
stages:
- stage: NuGet_Test_MacOS
  dependsOn:
  - NuGet_Packaging_${{ parameters.ArtifactSuffix }}
  condition: succeeded()
  jobs:
  - job: NuGet_Test_MacOS
    workspace:
      clean: all
    pool:
      name: 'Azure Pipelines'
      image: 'macOS-14'
      os: 'macOS'

    variables:
    - name: OnnxRuntimeBuildDirectory
      value: '$(Build.BinariesDirectory)'
    steps:
    - task: DownloadPipelineArtifact@0
      displayName: 'Download Pipeline Artifact - Signed NuGet'
      inputs:
        artifactName: drop-signed-nuget-${{ parameters.ArtifactSuffix }}
        targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

    - task: DownloadPipelineArtifact@0
      displayName: 'Download OsX CustomOp test data'
      inputs:
        artifactName: 'onnxruntime-osx'
        targetPath: '$(Build.BinariesDirectory)/testdata'

    - template: get-nuget-package-version-as-variable.yml
      parameters:
        packageFolder: '$(Build.BinariesDirectory)/nuget-artifact'

    - script: |
        echo "TODO: Enable this test once fix this nuget test issue"
  #     $(Build.SourcesDirectory)/csharp/test/Microsoft.ML.OnnxRuntime.EndToEndTests/runtest.sh \
  #               $(Build.BinariesDirectory)/nuget-artifact \
  #               $(NuGetPackageVersionNumber) \
  #               ${{ parameters.IsMacOS }}
  #
  #     if [ $? -ne 0 ]; then
  #         echo "Failed to run test"
  #         exit 1
  #     fi
      displayName: 'Run Test'
      env:
          OnnxRuntimeBuildDirectory: $(Build.BinariesDirectory)
          DisableContribOps: $(DisableContribOps)
          DisableMlOps: $(DisableMlOps)
          IsReleaseBuild: $(IsReleaseBuild)

    - template: ../../templates/clean-agent-build-directory-step.yml
