parameters:
  AgentPool: 'Linux-CPU'
  TestGPU: 'false'

jobs:
- job: NuGet_Test_Linux
  workspace:
    clean: all
  timeoutInMinutes:  120
  pool: ${{ parameters.AgentPool }}
  dependsOn:
  - NuGet_Packaging
  condition: succeeded()
  variables:
  - group: ORT_TEST_DATA_SAS
  - name: OnnxRuntimeBuildDirectory
    value: '$(Build.BinariesDirectory)'
  steps:
  - template: set-test-data-variables-step.yml
  - template: linux-set-variables-and-download.yml

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Signed NuGet'
    inputs:
      artifactName: 'drop-signed-nuget'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Linux CustomOp TestData'
    inputs:
      artifactName: 'drop-linux'
      targetPath: '$(Build.BinariesDirectory)/testdata'

  - template: get-nuget-package-version-as-variable.yml
    parameters:
      packageFolder: '$(Build.BinariesDirectory)/nuget-artifact'
  - task: Docker@2
    displayName: login
    inputs:
      containerRegistry: onnxruntimeregistry
      command: login
      addPipelineData: false

  - ${{ if eq(parameters['TestGPU'], 'false') }}:
    - script: |
       set -e -x
       $(Build.SourcesDirectory)/csharp/test/Microsoft.ML.OnnxRuntime.EndToEndTests/runtest-docker.sh $(Build.SourcesDirectory) $(Build.BinariesDirectory) nuget-artifact $(NuGetPackageVersionNumber) true
      displayName: 'Run Package Test (x64) on CentOS7'
      env:
        OnnxRuntimeBuildDirectory: $(Build.BinariesDirectory)


  - ${{ if eq(parameters['TestGPU'], 'true') }}:
    - script: |
       set -e -x
       $(Build.SourcesDirectory)/csharp/test/Microsoft.ML.OnnxRuntime.EndToEndTests/runtest-docker-gpu.sh $(Build.SourcesDirectory) $(Build.BinariesDirectory) nuget-artifact $(NuGetPackageVersionNumber)
      displayName: 'Run Package Test GPU (x64)'
      env:
        OnnxRuntimeBuildDirectory: $(Build.BinariesDirectory)

  - task: Docker@2
    displayName: logout
    inputs:
      containerRegistry: onnxruntimeregistry
      command: logout
      addPipelineData: false

  - template: ../../templates/component-governance-component-detection-steps.yml
    parameters :
      condition : 'always'

  - template: ../../templates/clean-agent-build-directory-step.yml
