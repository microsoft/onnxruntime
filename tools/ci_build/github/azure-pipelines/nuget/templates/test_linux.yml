parameters:
  AgentPool: 'Linux-CPU'

jobs:
- job: NuGet_Test_Linux
  workspace:
    clean: all
  timeoutInMinutes:  120
  pool: ${{ parameters.AgentPool }}
  dependsOn:
  - NuGet_Packaging
  condition: succeeded()
  variables:
  - name: OnnxRuntimeBuildDirectory
    value: '$(Build.BinariesDirectory)'
  steps:

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Signed NuGet'
    inputs:
      artifactName: 'drop-signed-nuget'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Linux CustomOp TestData'
    inputs:
      artifactName: 'drop-linux'
      targetPath: '$(Build.BinariesDirectory)/testdata'

  - template: get-nuget-package-version-as-variable.yml
    parameters:
      packageFolder: '$(Build.BinariesDirectory)/nuget-artifact'

  - task: CmdLine@2
    displayName: 'Create symlink for test models'
    inputs:
      script: |     
         ln -sf /data/models $(Build.BinariesDirectory)

  - task: Bash@3
    displayName: 'Run Package Test'
    inputs:
      targetType: filePath
      filePath: '$(Build.SourcesDirectory)/csharp/test/Microsoft.ML.OnnxRuntime.EndToEndTests/runtest.sh'
      arguments: '$(Build.BinariesDirectory)/nuget-artifact $(NuGetPackageVersionNumber)'
      workingDirectory: $(Build.BinariesDirectory)
    env:
      OnnxRuntimeBuildDirectory: $(Build.BinariesDirectory)
      DisableContribOps: $(DisableContribOps)
      DisableMlOps: $(DisableMlOps)
      IsReleaseBuild: $(IsReleaseBuild)
        
  - template: ../../templates/component-governance-component-detection-steps.yml
    parameters :
      condition : 'always'

  - template: ../../templates/clean-agent-build-directory-step.yml
