parameters:
  AgentPool: 'onnxruntime-Ubuntu2004-AMD-CPU'
  ArtifactSuffix: ''
  NugetPackageName : ''
  StageSuffix: 'CPU'
  NativePackagePrefix: 'onnxruntime'
  SpecificArtifact: false
  CustomOpArtifactName: 'onnxruntime-linux-x64'
  BuildId: '0'

stages:
- stage: NuGet_Test_Linux_${{ parameters.StageSuffix }}
  dependsOn:
  - NuGet_Packaging_${{ parameters.StageSuffix }}
  condition: succeeded()
  jobs:
  - job:
    workspace:
      clean: all
    timeoutInMinutes: 120
    pool: ${{ parameters.AgentPool }}

    variables:
    - name: OnnxRuntimeBuildDirectory
      value: '$(Build.BinariesDirectory)'

    steps:
    - template: ../../templates/flex-downloadPipelineArtifact.yml
      parameters:
        StepName: 'Download Signed NuGet'
        ArtifactName: drop-signed-nuget-${{ parameters.ArtifactSuffix }}
        TargetPath: '$(Build.BinariesDirectory)/nuget-artifact'
        SpecificArtifact: ${{ parameters.SpecificArtifact }}
        BuildId: ${{ parameters.BuildId }}

    - template: ../../templates/flex-downloadPipelineArtifact.yml
      parameters:
        StepName: 'Download Linux CustomOp TestData'
        ArtifactName: ${{ parameters.CustomOpArtifactName }}
        TargetPath: '$(Build.BinariesDirectory)/testdata'
        SpecificArtifact: ${{ parameters.specificArtifact }}
        BuildId: ${{ parameters.BuildId }}

    - template: get-nuget-package-version-as-variable.yml
      parameters:
        packageFolder: '$(Build.BinariesDirectory)/nuget-artifact'

    - task: CmdLine@2
      displayName: 'Create symlink for test models'
      inputs:
        script: |
          ln -sf /data/models $(Build.BinariesDirectory)

    - task: Bash@3
      displayName: 'Run Package Test'
      inputs:
        targetType: filePath
        filePath: '$(Build.SourcesDirectory)/csharp/test/Microsoft.ML.OnnxRuntime.EndToEndTests/runtest.sh'
        arguments: '$(Build.BinariesDirectory)/nuget-artifact $(NuGetPackageVersionNumber)'
        workingDirectory: $(Build.BinariesDirectory)
      env:
        OnnxRuntimeBuildDirectory: $(Build.BinariesDirectory)
        DisableContribOps: $(DisableContribOps)
        DisableMlOps: $(DisableMlOps)
        IsReleaseBuild: $(IsReleaseBuild)
        PACKAGENAME: ${{ parameters.NugetPackageName }}

    - template: ../../templates/component-governance-component-detection-steps.yml
      parameters:
        condition: 'always'

    - template: ../../templates/clean-agent-build-directory-step.yml
