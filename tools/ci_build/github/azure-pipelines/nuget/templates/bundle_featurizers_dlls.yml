# Bundle dlls, so and dylib into respective runtime folders 
steps:
- script: |
   pushd $(Build.BinariesDirectory)\nuget-artifact
   dir
   powershell -Command "Invoke-WebRequest http://stahlworks.com/dev/unzip.exe -OutFile unzip.exe"
   powershell -Command "Invoke-WebRequest http://stahlworks.com/dev/zip.exe -OutFile zip.exe"
   set PATH=%CD%;%PATH%
   FOR /R %%i IN (*.nupkg) do ( 
       rename %%~ni.nupkg %%~ni.zip
       unzip %%~ni.zip -d %%~ni
       del /Q %%~ni.zip
       unzip win-x86.zip -d win-x86
       mkdir %%~ni\runtimes\win-x86
       mkdir %%~ni\runtimes\win-x86\native
       move win-x86\runtimes\win-x86\native\onnxruntime.dll %%~ni\runtimes\win-x86\native\onnxruntime.dll
       move win-x86\runtimes\win-x86\native\onnxruntime.lib %%~ni\runtimes\win-x86\native\onnxruntime.lib
       move win-x86\runtimes\win-x86\native\onnxruntime.pdb %%~ni\runtimes\win-x86\native\onnxruntime.pdb
       pushd %%~ni
       zip -r ..\%%~ni.zip .
       popd
       move %%~ni.zip %%~ni.nupkg
   ) 
   popd
   copy $(Build.BinariesDirectory)\nuget-artifact\*.nupkg $(Build.ArtifactStagingDirectory)
  displayName: 'Bundle NuGet and other binaries'

