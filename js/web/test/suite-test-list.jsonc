{
  "cpu": {
    "onnx": [],
    "node": [],
    "ops": []
  },
  "webgl": {
    "onnx": ["resnet50", "squeezenet", "tiny_yolov2", "emotion_ferplus"],
    "node": [
      "test_abs",
      "test_acos_example",
      "test_acos",
      "test_add_bcast",
      "test_add",
      "test_and_bcast3v1d",
      "test_and_bcast3v2d",
      "test_and_bcast4v2d",
      "test_and_bcast4v3d",
      "test_and_bcast4v4d",
      "test_and2d",
      "test_and3d",
      "test_and4d",
      "test_asin_example",
      "test_asin",
      "test_atan_example",
      "test_atan",
      "test_averagepool_1d_default",
      "test_averagepool_2d_default",
      //"v12/test_averagepool_2d_pads", // TODO: fix avgpool and maxpool on VM
      // "v12/test_averagepool_2d_precomputed_pads",
      // "v12/test_averagepool_2d_precomputed_same_upper",
      // "v12/test_averagepool_2d_precomputed_strides",
      // "v12/test_averagepool_2d_same_upper",
      // "v12/test_averagepool_2d_same_lower",
      // "v12/test_averagepool_2d_strides",
      "test_averagepool_3d_default",
      "test_basic_conv_with_padding",
      "test_basic_conv_without_padding",
      "test_batchnorm_epsilon",
      "test_batchnorm_example",
      "v{7,8,9,10}/test_clip_splitbounds",
      "v{7,8,9,10}/test_clip_outbounds",
      "v{7,8,9,10}/test_clip_inbounds",
      "v{7,8,9,10}/test_clip_example",
      "v{7,8,9,10}/test_clip_default_min",
      "v{7,8,9,10}/test_clip_default_max",
      "v{7,8,9,10}/test_clip_default_inbounds",
      "v{7,8,9,10}/test_clip",
      "test_concat_1d_axis_0",
      "test_concat_2d_axis_0",
      "test_concat_2d_axis_1",
      "test_concat_3d_axis_0",
      "test_concat_3d_axis_1",
      "test_concat_3d_axis_2",
      "test_conv_with_strides_and_asymmetric_padding",
      "test_conv_with_strides_no_padding",
      "test_conv_with_strides_padding",
      "test_constant",
      "test_cos_example",
      "test_cos",
      "test_div_bcast",
      "test_div_example",
      "test_div",
      "test_dropout_default",
      "test_dropout_random",
      "test_depthtospace_crd_mode",
      "test_depthtospace_crd_mode_example",
      "test_depthtospace_dcr_mode",
      "test_depthtospace_example",
      "test_elu_example",
      "test_elu",
      "test_elu_default",
      "test_flatten_axis0",
      "test_flatten_axis1",
      "test_flatten_axis2",
      "test_flatten_axis3",
      "test_flatten_default_axis",
      "test_gather_0",
      "test_gather_1",
      "test_gemm_nobroadcast",
      "test_gemm_broadcast",
      "test_globalaveragepool_precomputed",
      "test_globalaveragepool",
      "test_globalmaxpool_precomputed",
      "test_globalmaxpool",
      "test_greater_bcast",
      "test_greater",
      "test_instancenorm_epsilon",
      "test_instancenorm_example",
      "test_less_bcast",
      "test_less",
      "test_equal_bcast",
      "test_equal",
      "test_identity",
      "test_leakyrelu_default",
      "test_leakyrelu_example",
      "test_leakyrelu",
      // "test_lrn_default",  <-- failing due to low precison. If absolute CPU error threshold is increased from 1e-4 to 1e-2 (100x increase), it passes the test.
      // "test_lrn",  <-- failing due to low precison. If absolute CPU error threshold is increased from 1e-4 to 1e-3 (10x increase), it passes the test.
      "test_matmul_2d",
      "test_matmul_3d",
      "test_matmul_4d",
      "test_maxpool_1d_default",
      "test_maxpool_2d_default",
      // "v12/test_maxpool_2d_pads",
      // "v12/test_maxpool_2d_precomputed_pads",
      // "v12/test_maxpool_2d_precomputed_same_upper",
      // "v12/test_maxpool_2d_precomputed_strides",
      // "v12/test_maxpool_2d_same_lower",
      // "v12/test_maxpool_2d_same_upper",
      // "v12/test_maxpool_2d_strides",
      "test_maxpool_3d_default",
      "test_mul_bcast",
      "test_mul_example",
      "test_mul",
      "test_neg",
      "test_neg_example",
      "test_not_2d",
      "test_not_3d",
      "test_not_4d",
      "test_or_bcast3v1d",
      "test_or_bcast3v2d",
      "test_or_bcast4v2d",
      "test_or_bcast4v3d",
      "test_or_bcast4v4d",
      "test_prelu_broadcast",
      "test_prelu_example",
      "test_relu",
      "test_reshape_extended_dims",
      "test_reshape_negative_dim",
      "test_reshape_one_dim",
      "test_reshape_reduced_dims",
      "test_reshape_reordered_dims",
      "test_sigmoid",
      "test_sigmoid_example",
      "test_sin_example",
      "test_sin",
      "test_softmax_axis_0",
      "test_softmax_axis_1",
      "test_softmax_axis_2",
      "test_softmax_default_axis",
      "test_softmax_example",
      {
        "name": "test_softmax_large_number",
        "condition": "^((?!iOS).)*$" // does NOT contains 'iOS': large number cannot be handled in a half_float environment
      },
      "test_sub_bcast",
      "test_sub_example",
      "test_sub",
      "test_sum_example",
      "test_sum_one_input",
      "test_sum_two_inputs",
      "test_reduce_log_sum_asc_axes",
      "test_reduce_log_sum_default",
      "test_reduce_log_sum_desc_axes",
      "test_reduce_max_default_axes_keepdim_example",
      "test_reduce_max_default_axes_keepdims_random",
      "test_reduce_max_do_not_keepdims_example",
      "test_reduce_max_do_not_keepdims_random",
      "test_reduce_max_keepdims_example",
      "test_reduce_max_keepdims_random",
      "test_reduce_mean_default_axes_keepdims_example",
      "test_reduce_mean_default_axes_keepdims_random",
      "test_reduce_mean_do_not_keepdims_example",
      "test_reduce_mean_do_not_keepdims_random",
      "test_reduce_mean_keepdims_example",
      "test_reduce_mean_keepdims_random",
      "test_reduce_min_default_axes_keepdims_example",
      "test_reduce_min_default_axes_keepdims_random",
      "test_reduce_min_do_not_keepdims_example",
      "test_reduce_min_do_not_keepdims_random",
      "test_reduce_min_keepdims_example",
      "test_reduce_min_keepdims_random",
      {
        "name": "test_reduce_prod_default_axes_keepdims_example",
        "condition": "^((?!iOS).)*$" // does NOT contains 'iOS': large number cannot be handled in a half_float environment
      },
      "test_reduce_prod_default_axes_keepdims_random",
      "test_reduce_prod_do_not_keepdims_example",
      "test_reduce_prod_do_not_keepdims_random",
      "test_reduce_prod_keepdims_example",
      "test_reduce_prod_keepdims_random",
      "test_reduce_sum_default_axes_keepdims_example",
      "test_reduce_sum_default_axes_keepdims_random",
      "test_reduce_sum_do_not_keepdims_example",
      "test_reduce_sum_do_not_keepdims_random",
      "test_reduce_sum_keepdims_example",
      "test_reduce_sum_keepdims_random",
      "test_reduce_sum_square_default_axes_keepdims_example",
      "test_reduce_sum_square_default_axes_keepdims_random",
      "test_reduce_sum_square_do_not_keepdims_example",
      "test_reduce_sum_square_do_not_keepdims_random",
      "test_reduce_sum_square_keepdims_example",
      "test_reduce_sum_square_keepdims_random",
      "test_split_variable_parts_default_axis",
      "test_split_variable_parts_1d",
      "test_split_variable_parts_2d",
      "test_split_equal_parts_default_axis",
      "test_split_equal_parts_1d",
      "test_split_equal_parts_2d",
      "v{7,8,9}/test_slice",
      "v{7,8,9}/test_slice_default_axes",
      "v{7,8,9}/test_slice_end_out_of_bounds",
      "v{7,8,9}/test_slice_neg",
      // "test_slice_start_out_of_bounds", // tensor shape of 0
      "test_squeeze",
      "test_tan_example",
      "test_tan",
      "test_tanh_example",
      "test_tanh",
      "test_tile",
      "test_tile_precomputed",
      "test_transpose_all_permutations_0",
      "test_transpose_all_permutations_1",
      "test_transpose_all_permutations_2",
      "test_transpose_all_permutations_3",
      "test_transpose_all_permutations_4",
      "test_transpose_all_permutations_5",
      "test_transpose_default",
      "test_unsqueeze",
      "test_xor_bcast3v1d",
      "test_xor_bcast3v2d",
      "test_xor_bcast4v2d",
      "test_xor_bcast4v3d",
      "test_xor_bcast4v4d",
      "test_xor2d",
      "test_xor3d",
      "test_xor4d"
    ],
    "ops": [
      "abs.jsonc",
      "acos.jsonc",
      "add.jsonc",
      "and.jsonc",
      "asin.jsonc",
      "ceil.jsonc",
      "conv.jsonc",
      "cos.jsonc",
      "div.jsonc",
      "depth-to-space.jsonc",
      "equal.jsonc",
      "exp.jsonc",
      "floor.jsonc",
      "global-average-pool.jsonc",
      "gemm.jsonc",
      "greater.jsonc",
      //"identity.jsonc",
      "image-scaler.jsonc",
      "less.jsonc",
      "log.jsonc",
      "matmul.jsonc",
      "mul.jsonc",
      "neg.jsonc",
      "not.jsonc",
      "or.jsonc",
      "leaky-relu.jsonc",
      "reduce-min.jsonc",
      "relu.jsonc",
      "pad.jsonc",
      "pad-big.jsonc",
      "pow.jsonc",
      "pow-big-number.jsonc",
      "reshape.jsonc",
      "softmax.jsonc",
      "sin.jsonc",
      "split.jsonc",
      "sqrt.jsonc",
      "sub.jsonc",
      "tan.jsonc",
      "transpose.jsonc",
      "xor.jsonc"
    ]
  },
  "wasm": {
    "onnx": ["resnet50", "squeezenet", "tiny_yolov2", "emotion_ferplus"],
    "node": [
      // Check in node tests that have native Wasm implementations
      // (i.e.) not tests that rely on the fallback cpu implementations
      // Use the 'cpu' level of node tests to test those implementations
      "test_add_bcast",
      "test_add",
      "test_sub_bcast",
      "test_sub_example",
      "test_sub",
      "test_mul_bcast",
      "test_mul_example",
      "test_mul",
      "test_div_bcast",
      "test_div_example",
      "test_div",
      "test_xor_bcast3v1d",
      "test_xor_bcast3v2d",
      "test_xor_bcast4v2d",
      "test_xor_bcast4v3d",
      "test_xor_bcast4v4d",
      "test_xor2d",
      "test_xor3d",
      "test_xor4d",
      "test_or_bcast3v1d",
      "test_or_bcast3v2d",
      "test_or_bcast4v2d",
      "test_or_bcast4v3d",
      "test_or_bcast4v4d",
      "test_and_bcast3v1d",
      "test_and_bcast3v2d",
      "test_and_bcast4v2d",
      "test_and_bcast4v3d",
      "test_and_bcast4v4d",
      "test_and2d",
      "test_and3d",
      "test_and4d",
      "test_prelu_broadcast",
      "test_prelu_example",
      "test_basic_conv_with_padding",
      "test_basic_conv_without_padding",
      "test_batchnorm_epsilon",
      "test_batchnorm_example",
      "v{10,11,12}/test_cast_STRING_to_FLOAT",
      "v{7,8,9,10}/test_clip_splitbounds",
      "v{7,8,9,10}/test_clip_outbounds",
      "v{7,8,9,10}/test_clip_inbounds",
      "v{7,8,9,10}/test_clip_example",
      "v{7,8,9,10}/test_clip_default_min",
      "v{7,8,9,10}/test_clip_default_max",
      "v{7,8,9,10}/test_clip_default_inbounds",
      "v{7,8,9,10}/test_clip",
      "test_conv_with_strides_and_asymmetric_padding",
      "test_conv_with_strides_no_padding",
      "test_conv_with_strides_padding",
      "test_gemm_nobroadcast",
      "test_gemm_broadcast",
      "test_matmul_2d",
      "test_matmul_3d",
      "test_matmul_4d",
      "test_softmax_axis_0",
      "test_softmax_axis_1",
      "test_softmax_axis_2",
      "test_softmax_default_axis",
      "test_softmax_example",
      "test_softmax_large_number",
      "test_sum_example",
      "test_sum_one_input",
      "test_sum_two_inputs",
      "test_averagepool_1d_default",
      "test_averagepool_2d_default",
      "test_averagepool_2d_pads",
      "test_averagepool_2d_precomputed_pads",
      "test_averagepool_2d_precomputed_same_upper",
      "test_averagepool_2d_precomputed_strides",
      "test_averagepool_2d_same_upper",
      "test_averagepool_2d_same_lower",
      "test_averagepool_2d_strides",
      "test_averagepool_3d_default",
      "test_maxpool_1d_default",
      "test_maxpool_2d_default",
      "test_maxpool_2d_pads",
      "test_maxpool_2d_precomputed_pads",
      "test_maxpool_2d_precomputed_same_upper",
      "test_maxpool_2d_precomputed_strides",
      "test_maxpool_2d_same_lower",
      "test_maxpool_2d_same_upper",
      "test_maxpool_2d_strides",
      "test_maxpool_3d_default",
      "test_globalaveragepool_precomputed",
      "test_globalaveragepool",
      "test_globalmaxpool_precomputed",
      "test_globalmaxpool",
      "test_instancenorm_epsilon",
      "test_instancenorm_example"
    ],
    "ops": []
  }
}
